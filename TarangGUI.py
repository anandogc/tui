# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TarangGUI.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1062, 696)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.energy_transfer_tab = QtWidgets.QTabWidget(self.centralwidget)
        self.energy_transfer_tab.setGeometry(QtCore.QRect(0, 0, 1061, 651))
        self.energy_transfer_tab.setObjectName("energy_transfer_tab")
        self.program = QtWidgets.QWidget()
        self.program.setObjectName("program")
        self.program_kind_label = QtWidgets.QLabel(self.program)
        self.program_kind_label.setGeometry(QtCore.QRect(70, 60, 161, 17))
        self.program_kind_label.setObjectName("program_kind_label")
        self.label = QtWidgets.QLabel(self.program)
        self.label.setGeometry(QtCore.QRect(240, 60, 16, 17))
        self.label.setObjectName("label")
        self.program_kind = QtWidgets.QComboBox(self.program)
        self.program_kind.setGeometry(QtCore.QRect(250, 54, 191, 31))
        self.program_kind.setObjectName("program_kind")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_kind.addItem("")
        self.program_basis_type = QtWidgets.QComboBox(self.program)
        self.program_basis_type.setGeometry(QtCore.QRect(250, 94, 191, 31))
        self.program_basis_type.setCurrentText("FFF")
        self.program_basis_type.setObjectName("program_basis_type")
        self.program_basis_type.addItem("")
        self.program_basis_type.addItem("")
        self.program_basis_type.addItem("")
        self.program_basis_type.addItem("")
        self.program_basis_type_label = QtWidgets.QLabel(self.program)
        self.program_basis_type_label.setGeometry(QtCore.QRect(70, 100, 161, 17))
        self.program_basis_type_label.setObjectName("program_basis_type_label")
        self.label_2 = QtWidgets.QLabel(self.program)
        self.label_2.setGeometry(QtCore.QRect(240, 100, 16, 17))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.program)
        self.label_3.setGeometry(QtCore.QRect(240, 140, 16, 17))
        self.label_3.setObjectName("label_3")
        self.program_iter_or_diag = QtWidgets.QComboBox(self.program)
        self.program_iter_or_diag.setGeometry(QtCore.QRect(250, 134, 191, 31))
        self.program_iter_or_diag.setObjectName("program_iter_or_diag")
        self.program_iter_or_diag.addItem("")
        self.program_iter_or_diag.addItem("")
        self.program_iter_or_diag_label = QtWidgets.QLabel(self.program)
        self.program_iter_or_diag_label.setGeometry(QtCore.QRect(70, 140, 161, 17))
        self.program_iter_or_diag_label.setObjectName("program_iter_or_diag_label")
        self.label_4 = QtWidgets.QLabel(self.program)
        self.label_4.setGeometry(QtCore.QRect(240, 180, 16, 17))
        self.label_4.setObjectName("label_4")
        self.program_alias_option = QtWidgets.QComboBox(self.program)
        self.program_alias_option.setGeometry(QtCore.QRect(250, 174, 191, 31))
        self.program_alias_option.setObjectName("program_alias_option")
        self.program_alias_option.addItem("")
        self.program_alias_option.addItem("")
        self.program_alias_option_label = QtWidgets.QLabel(self.program)
        self.program_alias_option_label.setGeometry(QtCore.QRect(70, 180, 161, 17))
        self.program_alias_option_label.setObjectName("program_alias_option_label")
        self.label_5 = QtWidgets.QLabel(self.program)
        self.label_5.setGeometry(QtCore.QRect(240, 216, 16, 17))
        self.label_5.setObjectName("label_5")
        self.program_integration_scheme_label = QtWidgets.QLabel(self.program)
        self.program_integration_scheme_label.setGeometry(QtCore.QRect(70, 216, 161, 17))
        self.program_integration_scheme_label.setObjectName("program_integration_scheme_label")
        self.program_dt_option = QtWidgets.QComboBox(self.program)
        self.program_dt_option.setGeometry(QtCore.QRect(250, 400, 191, 31))
        self.program_dt_option.setObjectName("program_dt_option")
        self.program_dt_option.addItem("")
        self.program_dt_option.addItem("")
        self.label_6 = QtWidgets.QLabel(self.program)
        self.label_6.setGeometry(QtCore.QRect(240, 250, 16, 17))
        self.label_6.setObjectName("label_6")
        self.program_LES_switch_label = QtWidgets.QLabel(self.program)
        self.program_LES_switch_label.setGeometry(QtCore.QRect(70, 250, 161, 17))
        self.program_LES_switch_label.setObjectName("program_LES_switch_label")
        self.program_apply_strong_realitycond_alltime_switch_label = QtWidgets.QLabel(self.program)
        self.program_apply_strong_realitycond_alltime_switch_label.setGeometry(QtCore.QRect(70, 280, 281, 17))
        self.program_apply_strong_realitycond_alltime_switch_label.setObjectName("program_apply_strong_realitycond_alltime_switch_label")
        self.label_9 = QtWidgets.QLabel(self.program)
        self.label_9.setGeometry(QtCore.QRect(350, 280, 16, 17))
        self.label_9.setObjectName("label_9")
        self.program_apply_weak_realitycond_switch_alltime_switch_label = QtWidgets.QLabel(self.program)
        self.program_apply_weak_realitycond_switch_alltime_switch_label.setGeometry(QtCore.QRect(70, 310, 281, 17))
        self.program_apply_weak_realitycond_switch_alltime_switch_label.setObjectName("program_apply_weak_realitycond_switch_alltime_switch_label")
        self.label_11 = QtWidgets.QLabel(self.program)
        self.label_11.setGeometry(QtCore.QRect(350, 310, 16, 17))
        self.label_11.setObjectName("label_11")
        self.program_low_diemnsional_switch_label = QtWidgets.QLabel(self.program)
        self.program_low_diemnsional_switch_label.setGeometry(QtCore.QRect(70, 340, 171, 17))
        self.program_low_diemnsional_switch_label.setObjectName("program_low_diemnsional_switch_label")
        self.label_13 = QtWidgets.QLabel(self.program)
        self.label_13.setGeometry(QtCore.QRect(240, 340, 16, 17))
        self.label_13.setObjectName("label_13")
        self.label_16 = QtWidgets.QLabel(self.program)
        self.label_16.setGeometry(QtCore.QRect(240, 370, 16, 17))
        self.label_16.setObjectName("label_16")
        self.program_two_dimension_label = QtWidgets.QLabel(self.program)
        self.program_two_dimension_label.setGeometry(QtCore.QRect(70, 370, 171, 17))
        self.program_two_dimension_label.setObjectName("program_two_dimension_label")
        self.program_dt_option_label = QtWidgets.QLabel(self.program)
        self.program_dt_option_label.setGeometry(QtCore.QRect(70, 410, 171, 17))
        self.program_dt_option_label.setObjectName("program_dt_option_label")
        self.label_19 = QtWidgets.QLabel(self.program)
        self.label_19.setGeometry(QtCore.QRect(240, 410, 16, 17))
        self.label_19.setObjectName("label_19")
        self.program_integration_scheme = QtWidgets.QComboBox(self.program)
        self.program_integration_scheme.setGeometry(QtCore.QRect(250, 210, 191, 31))
        self.program_integration_scheme.setObjectName("program_integration_scheme")
        self.program_integration_scheme.addItem("")
        self.program_integration_scheme.addItem("")
        self.program_integration_scheme.addItem("")
        self.program_helicity_switch_label = QtWidgets.QLabel(self.program)
        self.program_helicity_switch_label.setGeometry(QtCore.QRect(70, 440, 171, 17))
        self.program_helicity_switch_label.setObjectName("program_helicity_switch_label")
        self.label_20 = QtWidgets.QLabel(self.program)
        self.label_20.setGeometry(QtCore.QRect(240, 440, 16, 17))
        self.label_20.setObjectName("label_20")
        self.program_sincostr_switch_label = QtWidgets.QLabel(self.program)
        self.program_sincostr_switch_label.setGeometry(QtCore.QRect(70, 470, 171, 17))
        self.program_sincostr_switch_label.setObjectName("program_sincostr_switch_label")
        self.label_22 = QtWidgets.QLabel(self.program)
        self.label_22.setGeometry(QtCore.QRect(240, 470, 16, 17))
        self.label_22.setObjectName("label_22")
        self.program_sincostr_switch = QtWidgets.QLineEdit(self.program)
        self.program_sincostr_switch.setGeometry(QtCore.QRect(250, 470, 171, 25))
        self.program_sincostr_switch.setObjectName("program_sincostr_switch")
        self.program_help = QtWidgets.QStackedWidget(self.program)
        self.program_help.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.program_help.setObjectName("program_help")
        self.program_kind_help_page = QtWidgets.QWidget()
        self.program_kind_help_page.setObjectName("program_kind_help_page")
        self.program_kind_help_text = QtWidgets.QTextBrowser(self.program_kind_help_page)
        self.program_kind_help_text.setGeometry(QtCore.QRect(0, 0, 480, 501))
        self.program_kind_help_text.setObjectName("program_kind_help_text")
        self.program_help.addWidget(self.program_kind_help_page)
        self.program_basis_type_help_page = QtWidgets.QWidget()
        self.program_basis_type_help_page.setObjectName("program_basis_type_help_page")
        self.program_basis_type_help_text = QtWidgets.QTextBrowser(self.program_basis_type_help_page)
        self.program_basis_type_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_basis_type_help_text.setObjectName("program_basis_type_help_text")
        self.program_help.addWidget(self.program_basis_type_help_page)
        self.program_iter_or_diag_help_page = QtWidgets.QWidget()
        self.program_iter_or_diag_help_page.setObjectName("program_iter_or_diag_help_page")
        self.program_iter_or_diag_help_text = QtWidgets.QTextBrowser(self.program_iter_or_diag_help_page)
        self.program_iter_or_diag_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_iter_or_diag_help_text.setObjectName("program_iter_or_diag_help_text")
        self.program_help.addWidget(self.program_iter_or_diag_help_page)
        self.program_alias_option_help_page = QtWidgets.QWidget()
        self.program_alias_option_help_page.setObjectName("program_alias_option_help_page")
        self.program_alias_option_help_text = QtWidgets.QTextBrowser(self.program_alias_option_help_page)
        self.program_alias_option_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_alias_option_help_text.setObjectName("program_alias_option_help_text")
        self.program_help.addWidget(self.program_alias_option_help_page)
        self.program_integration_scheme_help_page = QtWidgets.QWidget()
        self.program_integration_scheme_help_page.setObjectName("program_integration_scheme_help_page")
        self.program_integration_help_text = QtWidgets.QTextBrowser(self.program_integration_scheme_help_page)
        self.program_integration_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_integration_help_text.setObjectName("program_integration_help_text")
        self.program_help.addWidget(self.program_integration_scheme_help_page)
        self.program_LES_switch_help_page = QtWidgets.QWidget()
        self.program_LES_switch_help_page.setObjectName("program_LES_switch_help_page")
        self.program_LES_switch_help_text = QtWidgets.QTextBrowser(self.program_LES_switch_help_page)
        self.program_LES_switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_LES_switch_help_text.setObjectName("program_LES_switch_help_text")
        self.program_help.addWidget(self.program_LES_switch_help_page)
        self.program_strong_reality_help_page = QtWidgets.QWidget()
        self.program_strong_reality_help_page.setObjectName("program_strong_reality_help_page")
        self.program_strong_reality_help_text = QtWidgets.QTextBrowser(self.program_strong_reality_help_page)
        self.program_strong_reality_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_strong_reality_help_text.setObjectName("program_strong_reality_help_text")
        self.program_help.addWidget(self.program_strong_reality_help_page)
        self.program_weak_reality_condition_help_page = QtWidgets.QWidget()
        self.program_weak_reality_condition_help_page.setObjectName("program_weak_reality_condition_help_page")
        self.program_weak_reality_condition_help_text = QtWidgets.QTextBrowser(self.program_weak_reality_condition_help_page)
        self.program_weak_reality_condition_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_weak_reality_condition_help_text.setObjectName("program_weak_reality_condition_help_text")
        self.program_help.addWidget(self.program_weak_reality_condition_help_page)
        self.program_low_dimentional_help_page = QtWidgets.QWidget()
        self.program_low_dimentional_help_page.setObjectName("program_low_dimentional_help_page")
        self.program_low_dimentional_help_text = QtWidgets.QTextBrowser(self.program_low_dimentional_help_page)
        self.program_low_dimentional_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_low_dimentional_help_text.setObjectName("program_low_dimentional_help_text")
        self.program_help.addWidget(self.program_low_dimentional_help_page)
        self.program_two_dimention_help_page = QtWidgets.QWidget()
        self.program_two_dimention_help_page.setObjectName("program_two_dimention_help_page")
        self.program_two_dimention_help_text = QtWidgets.QTextBrowser(self.program_two_dimention_help_page)
        self.program_two_dimention_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_two_dimention_help_text.setObjectName("program_two_dimention_help_text")
        self.program_help.addWidget(self.program_two_dimention_help_page)
        self.program_dt_option_help_page = QtWidgets.QWidget()
        self.program_dt_option_help_page.setObjectName("program_dt_option_help_page")
        self.program_dt_option_help_text = QtWidgets.QTextBrowser(self.program_dt_option_help_page)
        self.program_dt_option_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_dt_option_help_text.setObjectName("program_dt_option_help_text")
        self.program_help.addWidget(self.program_dt_option_help_page)
        self.program_helicity_switch_help_page = QtWidgets.QWidget()
        self.program_helicity_switch_help_page.setObjectName("program_helicity_switch_help_page")
        self.helicity_switch_help_text = QtWidgets.QTextBrowser(self.program_helicity_switch_help_page)
        self.helicity_switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.helicity_switch_help_text.setObjectName("helicity_switch_help_text")
        self.program_help.addWidget(self.program_helicity_switch_help_page)
        self.program_sincostr_switch_help_page = QtWidgets.QWidget()
        self.program_sincostr_switch_help_page.setObjectName("program_sincostr_switch_help_page")
        self.program_sincostr_switch_help_text = QtWidgets.QTextBrowser(self.program_sincostr_switch_help_page)
        self.program_sincostr_switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.program_sincostr_switch_help_text.setObjectName("program_sincostr_switch_help_text")
        self.program_help.addWidget(self.program_sincostr_switch_help_page)
        self.help_label = QtWidgets.QLabel(self.program)
        self.help_label.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label.setObjectName("help_label")
        self.program_help_dropdown = QtWidgets.QComboBox(self.program)
        self.program_help_dropdown.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.program_help_dropdown.setObjectName("program_help_dropdown")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.program_help_dropdown.addItem("")
        self.label_24 = QtWidgets.QLabel(self.program)
        self.label_24.setGeometry(QtCore.QRect(750, 30, 16, 17))
        self.label_24.setObjectName("label_24")
        self.program_LES_switch = QtWidgets.QPushButton(self.program)
        self.program_LES_switch.setGeometry(QtCore.QRect(250, 250, 67, 21))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_LES_switch.setFont(font)
        self.program_LES_switch.setStyleSheet("QPushButton {text-align: left}")
        self.program_LES_switch.setCheckable(True)
        self.program_LES_switch.setAutoDefault(False)
        self.program_LES_switch.setDefault(False)
        self.program_LES_switch.setFlat(True)
        self.program_LES_switch.setObjectName("program_LES_switch")
        self.program_strong_reality_condition = QtWidgets.QPushButton(self.program)
        self.program_strong_reality_condition.setGeometry(QtCore.QRect(360, 276, 67, 23))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_strong_reality_condition.setFont(font)
        self.program_strong_reality_condition.setStyleSheet("QPushButton {text-align: left}")
        self.program_strong_reality_condition.setCheckable(True)
        self.program_strong_reality_condition.setAutoDefault(False)
        self.program_strong_reality_condition.setDefault(False)
        self.program_strong_reality_condition.setFlat(True)
        self.program_strong_reality_condition.setObjectName("program_strong_reality_condition")
        self.program_weak_reality_condition = QtWidgets.QPushButton(self.program)
        self.program_weak_reality_condition.setGeometry(QtCore.QRect(360, 310, 67, 21))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_weak_reality_condition.setFont(font)
        self.program_weak_reality_condition.setStyleSheet("QPushButton {text-align: left}")
        self.program_weak_reality_condition.setCheckable(True)
        self.program_weak_reality_condition.setAutoDefault(False)
        self.program_weak_reality_condition.setDefault(False)
        self.program_weak_reality_condition.setFlat(True)
        self.program_weak_reality_condition.setObjectName("program_weak_reality_condition")
        self.program_low_dim_switch = QtWidgets.QPushButton(self.program)
        self.program_low_dim_switch.setGeometry(QtCore.QRect(250, 340, 67, 21))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_low_dim_switch.setFont(font)
        self.program_low_dim_switch.setStyleSheet("QPushButton {text-align: left}")
        self.program_low_dim_switch.setCheckable(True)
        self.program_low_dim_switch.setAutoDefault(False)
        self.program_low_dim_switch.setDefault(False)
        self.program_low_dim_switch.setFlat(True)
        self.program_low_dim_switch.setObjectName("program_low_dim_switch")
        self.program_two_dim_switch = QtWidgets.QPushButton(self.program)
        self.program_two_dim_switch.setGeometry(QtCore.QRect(250, 370, 67, 21))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_two_dim_switch.setFont(font)
        self.program_two_dim_switch.setStyleSheet("QPushButton {text-align: left}")
        self.program_two_dim_switch.setCheckable(True)
        self.program_two_dim_switch.setAutoDefault(False)
        self.program_two_dim_switch.setDefault(False)
        self.program_two_dim_switch.setFlat(True)
        self.program_two_dim_switch.setObjectName("program_two_dim_switch")
        self.program_helicity_switch = QtWidgets.QPushButton(self.program)
        self.program_helicity_switch.setGeometry(QtCore.QRect(250, 440, 67, 21))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_helicity_switch.setFont(font)
        self.program_helicity_switch.setStyleSheet("QPushButton {text-align: left}")
        self.program_helicity_switch.setCheckable(True)
        self.program_helicity_switch.setAutoDefault(False)
        self.program_helicity_switch.setDefault(False)
        self.program_helicity_switch.setFlat(True)
        self.program_helicity_switch.setObjectName("program_helicity_switch")
        self.energy_transfer_tab.addTab(self.program, "")
        self.field_tab = QtWidgets.QWidget()
        self.field_tab.setObjectName("field_tab")
        self.program_kind_label_2 = QtWidgets.QLabel(self.field_tab)
        self.program_kind_label_2.setGeometry(QtCore.QRect(70, 60, 161, 17))
        self.program_kind_label_2.setObjectName("program_kind_label_2")
        self.label_14 = QtWidgets.QLabel(self.field_tab)
        self.label_14.setGeometry(QtCore.QRect(240, 60, 16, 17))
        self.label_14.setObjectName("label_14")
        self.field_Nx = QtWidgets.QLineEdit(self.field_tab)
        self.field_Nx.setGeometry(QtCore.QRect(260, 60, 51, 25))
        self.field_Nx.setText("")
        self.field_Nx.setObjectName("field_Nx")
        self.label_15 = QtWidgets.QLabel(self.field_tab)
        self.label_15.setGeometry(QtCore.QRect(250, 60, 16, 17))
        self.label_15.setObjectName("label_15")
        self.label_23 = QtWidgets.QLabel(self.field_tab)
        self.label_23.setGeometry(QtCore.QRect(320, 60, 16, 17))
        self.label_23.setObjectName("label_23")
        self.field_Ny = QtWidgets.QLineEdit(self.field_tab)
        self.field_Ny.setGeometry(QtCore.QRect(330, 60, 51, 25))
        self.field_Ny.setText("")
        self.field_Ny.setObjectName("field_Ny")
        self.label_25 = QtWidgets.QLabel(self.field_tab)
        self.label_25.setGeometry(QtCore.QRect(390, 60, 16, 17))
        self.label_25.setObjectName("label_25")
        self.field_Nz = QtWidgets.QLineEdit(self.field_tab)
        self.field_Nz.setGeometry(QtCore.QRect(400, 60, 51, 25))
        self.field_Nz.setText("")
        self.field_Nz.setObjectName("field_Nz")
        self.label_26 = QtWidgets.QLabel(self.field_tab)
        self.label_26.setGeometry(QtCore.QRect(460, 60, 16, 17))
        self.label_26.setObjectName("label_26")
        self.label_27 = QtWidgets.QLabel(self.field_tab)
        self.label_27.setGeometry(QtCore.QRect(390, 90, 16, 17))
        self.label_27.setObjectName("label_27")
        self.field_Nz_2 = QtWidgets.QLineEdit(self.field_tab)
        self.field_Nz_2.setGeometry(QtCore.QRect(400, 90, 51, 25))
        self.field_Nz_2.setText("")
        self.field_Nz_2.setObjectName("field_Nz_2")
        self.field_Nx_2 = QtWidgets.QLineEdit(self.field_tab)
        self.field_Nx_2.setGeometry(QtCore.QRect(260, 90, 51, 25))
        self.field_Nx_2.setText("")
        self.field_Nx_2.setObjectName("field_Nx_2")
        self.label_28 = QtWidgets.QLabel(self.field_tab)
        self.label_28.setGeometry(QtCore.QRect(460, 90, 16, 17))
        self.label_28.setObjectName("label_28")
        self.program_kind_label_3 = QtWidgets.QLabel(self.field_tab)
        self.program_kind_label_3.setGeometry(QtCore.QRect(70, 90, 161, 17))
        self.program_kind_label_3.setObjectName("program_kind_label_3")
        self.field_Ny_2 = QtWidgets.QLineEdit(self.field_tab)
        self.field_Ny_2.setGeometry(QtCore.QRect(330, 90, 51, 25))
        self.field_Ny_2.setText("")
        self.field_Ny_2.setObjectName("field_Ny_2")
        self.label_29 = QtWidgets.QLabel(self.field_tab)
        self.label_29.setGeometry(QtCore.QRect(240, 90, 16, 17))
        self.label_29.setObjectName("label_29")
        self.label_30 = QtWidgets.QLabel(self.field_tab)
        self.label_30.setGeometry(QtCore.QRect(320, 90, 16, 17))
        self.label_30.setObjectName("label_30")
        self.label_31 = QtWidgets.QLabel(self.field_tab)
        self.label_31.setGeometry(QtCore.QRect(240, 90, 16, 17))
        self.label_31.setObjectName("label_31")
        self.label_32 = QtWidgets.QLabel(self.field_tab)
        self.label_32.setGeometry(QtCore.QRect(250, 90, 16, 17))
        self.label_32.setObjectName("label_32")
        self.label_33 = QtWidgets.QLabel(self.field_tab)
        self.label_33.setGeometry(QtCore.QRect(240, 120, 16, 17))
        self.label_33.setObjectName("label_33")
        self.field_Ny_3 = QtWidgets.QLineEdit(self.field_tab)
        self.field_Ny_3.setGeometry(QtCore.QRect(330, 120, 51, 25))
        self.field_Ny_3.setText("")
        self.field_Ny_3.setObjectName("field_Ny_3")
        self.label_34 = QtWidgets.QLabel(self.field_tab)
        self.label_34.setGeometry(QtCore.QRect(390, 120, 16, 17))
        self.label_34.setObjectName("label_34")
        self.label_35 = QtWidgets.QLabel(self.field_tab)
        self.label_35.setGeometry(QtCore.QRect(320, 120, 16, 17))
        self.label_35.setObjectName("label_35")
        self.field_Nx_3 = QtWidgets.QLineEdit(self.field_tab)
        self.field_Nx_3.setGeometry(QtCore.QRect(260, 120, 51, 25))
        self.field_Nx_3.setText("")
        self.field_Nx_3.setObjectName("field_Nx_3")
        self.label_36 = QtWidgets.QLabel(self.field_tab)
        self.label_36.setGeometry(QtCore.QRect(250, 120, 16, 17))
        self.label_36.setObjectName("label_36")
        self.field_Nz_3 = QtWidgets.QLineEdit(self.field_tab)
        self.field_Nz_3.setGeometry(QtCore.QRect(400, 120, 51, 25))
        self.field_Nz_3.setText("")
        self.field_Nz_3.setObjectName("field_Nz_3")
        self.program_kind_label_4 = QtWidgets.QLabel(self.field_tab)
        self.program_kind_label_4.setGeometry(QtCore.QRect(70, 120, 161, 17))
        self.program_kind_label_4.setObjectName("program_kind_label_4")
        self.label_37 = QtWidgets.QLabel(self.field_tab)
        self.label_37.setGeometry(QtCore.QRect(460, 120, 16, 17))
        self.label_37.setObjectName("label_37")
        self.label_38 = QtWidgets.QLabel(self.field_tab)
        self.label_38.setGeometry(QtCore.QRect(240, 150, 16, 17))
        self.label_38.setObjectName("label_38")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.field_tab)
        self.lineEdit_2.setGeometry(QtCore.QRect(260, 150, 191, 25))
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.program_sincostr_switch_2 = QtWidgets.QLabel(self.field_tab)
        self.program_sincostr_switch_2.setGeometry(QtCore.QRect(70, 150, 171, 17))
        self.program_sincostr_switch_2.setObjectName("program_sincostr_switch_2")
        self.label_39 = QtWidgets.QLabel(self.field_tab)
        self.label_39.setGeometry(QtCore.QRect(250, 150, 16, 17))
        self.label_39.setObjectName("label_39")
        self.label_40 = QtWidgets.QLabel(self.field_tab)
        self.label_40.setGeometry(QtCore.QRect(460, 150, 16, 17))
        self.label_40.setObjectName("label_40")
        self.label_41 = QtWidgets.QLabel(self.field_tab)
        self.label_41.setGeometry(QtCore.QRect(240, 180, 16, 17))
        self.label_41.setObjectName("label_41")
        self.label_42 = QtWidgets.QLabel(self.field_tab)
        self.label_42.setGeometry(QtCore.QRect(250, 180, 16, 17))
        self.label_42.setObjectName("label_42")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.field_tab)
        self.lineEdit_3.setGeometry(QtCore.QRect(260, 180, 191, 25))
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.program_sincostr_switch_3 = QtWidgets.QLabel(self.field_tab)
        self.program_sincostr_switch_3.setGeometry(QtCore.QRect(70, 180, 171, 17))
        self.program_sincostr_switch_3.setObjectName("program_sincostr_switch_3")
        self.label_43 = QtWidgets.QLabel(self.field_tab)
        self.label_43.setGeometry(QtCore.QRect(460, 180, 16, 17))
        self.label_43.setObjectName("label_43")
        self.label_44 = QtWidgets.QLabel(self.field_tab)
        self.label_44.setGeometry(QtCore.QRect(240, 210, 16, 17))
        self.label_44.setObjectName("label_44")
        self.label_45 = QtWidgets.QLabel(self.field_tab)
        self.label_45.setGeometry(QtCore.QRect(250, 210, 16, 17))
        self.label_45.setObjectName("label_45")
        self.lineEdit_4 = QtWidgets.QLineEdit(self.field_tab)
        self.lineEdit_4.setGeometry(QtCore.QRect(260, 210, 191, 25))
        self.lineEdit_4.setText("")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.program_sincostr_switch_4 = QtWidgets.QLabel(self.field_tab)
        self.program_sincostr_switch_4.setGeometry(QtCore.QRect(70, 210, 171, 17))
        self.program_sincostr_switch_4.setObjectName("program_sincostr_switch_4")
        self.label_46 = QtWidgets.QLabel(self.field_tab)
        self.label_46.setGeometry(QtCore.QRect(460, 210, 16, 17))
        self.label_46.setObjectName("label_46")
        self.program_LES_switch_label_2 = QtWidgets.QLabel(self.field_tab)
        self.program_LES_switch_label_2.setGeometry(QtCore.QRect(70, 240, 161, 17))
        self.program_LES_switch_label_2.setObjectName("program_LES_switch_label_2")
        self.label_48 = QtWidgets.QLabel(self.field_tab)
        self.label_48.setGeometry(QtCore.QRect(250, 240, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_48.setFont(font)
        self.label_48.setObjectName("label_48")
        self.label_49 = QtWidgets.QLabel(self.field_tab)
        self.label_49.setGeometry(QtCore.QRect(240, 240, 16, 17))
        self.label_49.setObjectName("label_49")
        self.label_50 = QtWidgets.QLabel(self.field_tab)
        self.label_50.setGeometry(QtCore.QRect(240, 270, 16, 17))
        self.label_50.setObjectName("label_50")
        self.program_LES_switch_label_3 = QtWidgets.QLabel(self.field_tab)
        self.program_LES_switch_label_3.setGeometry(QtCore.QRect(70, 270, 161, 17))
        self.program_LES_switch_label_3.setObjectName("program_LES_switch_label_3")
        self.spinBox = QtWidgets.QSpinBox(self.field_tab)
        self.spinBox.setGeometry(QtCore.QRect(250, 270, 48, 26))
        self.spinBox.setMinimum(1)
        self.spinBox.setMaximum(3)
        self.spinBox.setProperty("value", 3)
        self.spinBox.setObjectName("spinBox")
        self.field_help = QtWidgets.QStackedWidget(self.field_tab)
        self.field_help.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.field_help.setObjectName("field_help")
        self.field_N_help_page = QtWidgets.QWidget()
        self.field_N_help_page.setObjectName("field_N_help_page")
        self.field_N_help_text = QtWidgets.QTextBrowser(self.field_N_help_page)
        self.field_N_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_N_help_text.setObjectName("field_N_help_text")
        self.field_help.addWidget(self.field_N_help_page)
        self.field_kfactor_help_page = QtWidgets.QWidget()
        self.field_kfactor_help_page.setObjectName("field_kfactor_help_page")
        self.field_kfactor_help_text = QtWidgets.QTextBrowser(self.field_kfactor_help_page)
        self.field_kfactor_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_kfactor_help_text.setObjectName("field_kfactor_help_text")
        self.field_help.addWidget(self.field_kfactor_help_page)
        self.field_L_help_page = QtWidgets.QWidget()
        self.field_L_help_page.setObjectName("field_L_help_page")
        self.field_L_help_text = QtWidgets.QTextBrowser(self.field_L_help_page)
        self.field_L_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_L_help_text.setObjectName("field_L_help_text")
        self.field_help.addWidget(self.field_L_help_page)
        self.field_diss_coefficients_help_page = QtWidgets.QWidget()
        self.field_diss_coefficients_help_page.setObjectName("field_diss_coefficients_help_page")
        self.field_diss_coefficients_help_text = QtWidgets.QTextBrowser(self.field_diss_coefficients_help_page)
        self.field_diss_coefficients_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_diss_coefficients_help_text.setObjectName("field_diss_coefficients_help_text")
        self.field_help.addWidget(self.field_diss_coefficients_help_page)
        self.field_hyper_diss_coeff_help_page = QtWidgets.QWidget()
        self.field_hyper_diss_coeff_help_page.setObjectName("field_hyper_diss_coeff_help_page")
        self.field_hyper_diss_coeff_help_text = QtWidgets.QTextBrowser(self.field_hyper_diss_coeff_help_page)
        self.field_hyper_diss_coeff_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_hyper_diss_coeff_help_text.setObjectName("field_hyper_diss_coeff_help_text")
        self.field_help.addWidget(self.field_hyper_diss_coeff_help_page)
        self.field_hyper_diss_exponents_help_page = QtWidgets.QWidget()
        self.field_hyper_diss_exponents_help_page.setObjectName("field_hyper_diss_exponents_help_page")
        self.field_hyper_diss_exponents_help_text = QtWidgets.QTextBrowser(self.field_hyper_diss_exponents_help_page)
        self.field_hyper_diss_exponents_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_hyper_diss_exponents_help_text.setObjectName("field_hyper_diss_exponents_help_text")
        self.field_help.addWidget(self.field_hyper_diss_exponents_help_page)
        self.field_waveno_switch_help_page = QtWidgets.QWidget()
        self.field_waveno_switch_help_page.setObjectName("field_waveno_switch_help_page")
        self.field_waveno_switch_help_text = QtWidgets.QTextBrowser(self.field_waveno_switch_help_page)
        self.field_waveno_switch_help_text.setGeometry(QtCore.QRect(10, 0, 480, 510))
        self.field_waveno_switch_help_text.setObjectName("field_waveno_switch_help_text")
        self.field_help.addWidget(self.field_waveno_switch_help_page)
        self.field_anisotropy_dirn_help_page = QtWidgets.QWidget()
        self.field_anisotropy_dirn_help_page.setObjectName("field_anisotropy_dirn_help_page")
        self.field_anisotropy_dirn_help_text = QtWidgets.QTextBrowser(self.field_anisotropy_dirn_help_page)
        self.field_anisotropy_dirn_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_anisotropy_dirn_help_text.setObjectName("field_anisotropy_dirn_help_text")
        self.field_help.addWidget(self.field_anisotropy_dirn_help_page)
        self.help_label_2 = QtWidgets.QLabel(self.field_tab)
        self.help_label_2.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label_2.setObjectName("help_label_2")
        self.field_help_dropdown = QtWidgets.QComboBox(self.field_tab)
        self.field_help_dropdown.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.field_help_dropdown.setObjectName("field_help_dropdown")
        self.field_help_dropdown.addItem("")
        self.field_help_dropdown.addItem("")
        self.field_help_dropdown.addItem("")
        self.field_help_dropdown.addItem("")
        self.field_help_dropdown.addItem("")
        self.field_help_dropdown.addItem("")
        self.field_help_dropdown.addItem("")
        self.energy_transfer_tab.addTab(self.field_tab, "")
        self.time_tab = QtWidgets.QWidget()
        self.time_tab.setObjectName("time_tab")
        self.time_init = QtWidgets.QLineEdit(self.time_tab)
        self.time_init.setGeometry(QtCore.QRect(250, 60, 51, 25))
        self.time_init.setText("")
        self.time_init.setObjectName("time_init")
        self.field_kind_label_5 = QtWidgets.QLabel(self.time_tab)
        self.field_kind_label_5.setGeometry(QtCore.QRect(70, 60, 161, 17))
        self.field_kind_label_5.setObjectName("field_kind_label_5")
        self.label_51 = QtWidgets.QLabel(self.time_tab)
        self.label_51.setGeometry(QtCore.QRect(240, 60, 16, 17))
        self.label_51.setObjectName("label_51")
        self.program_kind_label_6 = QtWidgets.QLabel(self.time_tab)
        self.program_kind_label_6.setGeometry(QtCore.QRect(70, 90, 161, 17))
        self.program_kind_label_6.setObjectName("program_kind_label_6")
        self.label_52 = QtWidgets.QLabel(self.time_tab)
        self.label_52.setGeometry(QtCore.QRect(240, 90, 16, 17))
        self.label_52.setObjectName("label_52")
        self.time_final = QtWidgets.QLineEdit(self.time_tab)
        self.time_final.setGeometry(QtCore.QRect(250, 90, 51, 25))
        self.time_final.setText("")
        self.time_final.setObjectName("time_final")
        self.label_53 = QtWidgets.QLabel(self.time_tab)
        self.label_53.setGeometry(QtCore.QRect(240, 120, 16, 17))
        self.label_53.setObjectName("label_53")
        self.time_dt_fixed = QtWidgets.QLineEdit(self.time_tab)
        self.time_dt_fixed.setGeometry(QtCore.QRect(250, 120, 51, 25))
        self.time_dt_fixed.setText("")
        self.time_dt_fixed.setObjectName("time_dt_fixed")
        self.program_kind_label_7 = QtWidgets.QLabel(self.time_tab)
        self.program_kind_label_7.setGeometry(QtCore.QRect(70, 120, 161, 17))
        self.program_kind_label_7.setObjectName("program_kind_label_7")
        self.time_courant_no = QtWidgets.QLineEdit(self.time_tab)
        self.time_courant_no.setGeometry(QtCore.QRect(250, 150, 51, 25))
        self.time_courant_no.setText("")
        self.time_courant_no.setObjectName("time_courant_no")
        self.program_kind_label_8 = QtWidgets.QLabel(self.time_tab)
        self.program_kind_label_8.setGeometry(QtCore.QRect(70, 150, 161, 17))
        self.program_kind_label_8.setObjectName("program_kind_label_8")
        self.label_54 = QtWidgets.QLabel(self.time_tab)
        self.label_54.setGeometry(QtCore.QRect(240, 150, 16, 17))
        self.label_54.setObjectName("label_54")
        self.help_label_3 = QtWidgets.QLabel(self.time_tab)
        self.help_label_3.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label_3.setObjectName("help_label_3")
        self.label_57 = QtWidgets.QLabel(self.time_tab)
        self.label_57.setGeometry(QtCore.QRect(750, 30, 16, 17))
        self.label_57.setObjectName("label_57")
        self.time_help_dropdown = QtWidgets.QComboBox(self.time_tab)
        self.time_help_dropdown.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.time_help_dropdown.setObjectName("time_help_dropdown")
        self.time_help_dropdown.addItem("")
        self.time_help_dropdown.addItem("")
        self.time_help_dropdown.addItem("")
        self.time_help_dropdown.addItem("")
        self.time_help = QtWidgets.QStackedWidget(self.time_tab)
        self.time_help.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.time_help.setObjectName("time_help")
        self.time_init_page = QtWidgets.QWidget()
        self.time_init_page.setObjectName("time_init_page")
        self.time_init_help_text = QtWidgets.QTextBrowser(self.time_init_page)
        self.time_init_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.time_init_help_text.setObjectName("time_init_help_text")
        self.time_help.addWidget(self.time_init_page)
        self.time_final_page = QtWidgets.QWidget()
        self.time_final_page.setObjectName("time_final_page")
        self.time_final_help_text = QtWidgets.QTextBrowser(self.time_final_page)
        self.time_final_help_text.setGeometry(QtCore.QRect(0, 0, 480, 501))
        self.time_final_help_text.setObjectName("time_final_help_text")
        self.time_help.addWidget(self.time_final_page)
        self.time_dt_fixed_help_page = QtWidgets.QWidget()
        self.time_dt_fixed_help_page.setObjectName("time_dt_fixed_help_page")
        self.time_dt_fixed_help_text = QtWidgets.QTextBrowser(self.time_dt_fixed_help_page)
        self.time_dt_fixed_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.time_dt_fixed_help_text.setObjectName("time_dt_fixed_help_text")
        self.time_help.addWidget(self.time_dt_fixed_help_page)
        self.time_courant_no_help_page = QtWidgets.QWidget()
        self.time_courant_no_help_page.setObjectName("time_courant_no_help_page")
        self.time_courant_no_help_text = QtWidgets.QTextBrowser(self.time_courant_no_help_page)
        self.time_courant_no_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.time_courant_no_help_text.setObjectName("time_courant_no_help_text")
        self.time_help.addWidget(self.time_courant_no_help_page)
        self.energy_transfer_tab.addTab(self.time_tab, "")
        self.force_tab = QtWidgets.QWidget()
        self.force_tab.setObjectName("force_tab")
        self.label_55 = QtWidgets.QLabel(self.force_tab)
        self.label_55.setGeometry(QtCore.QRect(250, 60, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_55.setFont(font)
        self.label_55.setObjectName("label_55")
        self.label_56 = QtWidgets.QLabel(self.force_tab)
        self.label_56.setGeometry(QtCore.QRect(240, 60, 16, 17))
        self.label_56.setObjectName("label_56")
        self.program_LES_switch_label_4 = QtWidgets.QLabel(self.force_tab)
        self.program_LES_switch_label_4.setGeometry(QtCore.QRect(70, 60, 161, 17))
        self.program_LES_switch_label_4.setObjectName("program_LES_switch_label_4")
        self.program_LES_switch_label_9 = QtWidgets.QLabel(self.force_tab)
        self.program_LES_switch_label_9.setGeometry(QtCore.QRect(70, 90, 161, 17))
        self.program_LES_switch_label_9.setObjectName("program_LES_switch_label_9")
        self.label_113 = QtWidgets.QLabel(self.force_tab)
        self.label_113.setGeometry(QtCore.QRect(240, 90, 16, 17))
        self.label_113.setObjectName("label_113")
        self.label_114 = QtWidgets.QLabel(self.force_tab)
        self.label_114.setGeometry(QtCore.QRect(250, 90, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_114.setFont(font)
        self.label_114.setObjectName("label_114")
        self.label_115 = QtWidgets.QLabel(self.force_tab)
        self.label_115.setGeometry(QtCore.QRect(250, 120, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_115.setFont(font)
        self.label_115.setObjectName("label_115")
        self.program_LES_switch_label_10 = QtWidgets.QLabel(self.force_tab)
        self.program_LES_switch_label_10.setGeometry(QtCore.QRect(70, 120, 161, 17))
        self.program_LES_switch_label_10.setObjectName("program_LES_switch_label_10")
        self.label_116 = QtWidgets.QLabel(self.force_tab)
        self.label_116.setGeometry(QtCore.QRect(240, 120, 16, 17))
        self.label_116.setObjectName("label_116")
        self.label_117 = QtWidgets.QLabel(self.force_tab)
        self.label_117.setGeometry(QtCore.QRect(240, 150, 16, 17))
        self.label_117.setObjectName("label_117")
        self.program_sincostr_switch_9 = QtWidgets.QLabel(self.force_tab)
        self.program_sincostr_switch_9.setGeometry(QtCore.QRect(70, 150, 171, 17))
        self.program_sincostr_switch_9.setObjectName("program_sincostr_switch_9")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.force_tab)
        self.lineEdit_9.setGeometry(QtCore.QRect(260, 150, 191, 25))
        self.lineEdit_9.setText("")
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_118 = QtWidgets.QLabel(self.force_tab)
        self.label_118.setGeometry(QtCore.QRect(250, 150, 16, 17))
        self.label_118.setObjectName("label_118")
        self.label_119 = QtWidgets.QLabel(self.force_tab)
        self.label_119.setGeometry(QtCore.QRect(460, 150, 16, 17))
        self.label_119.setObjectName("label_119")
        self.label_120 = QtWidgets.QLabel(self.force_tab)
        self.label_120.setGeometry(QtCore.QRect(460, 180, 16, 17))
        self.label_120.setObjectName("label_120")
        self.label_121 = QtWidgets.QLabel(self.force_tab)
        self.label_121.setGeometry(QtCore.QRect(240, 180, 16, 17))
        self.label_121.setObjectName("label_121")
        self.label_122 = QtWidgets.QLabel(self.force_tab)
        self.label_122.setGeometry(QtCore.QRect(250, 180, 16, 17))
        self.label_122.setObjectName("label_122")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.force_tab)
        self.lineEdit_10.setGeometry(QtCore.QRect(260, 180, 191, 25))
        self.lineEdit_10.setText("")
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.program_sincostr_switch_10 = QtWidgets.QLabel(self.force_tab)
        self.program_sincostr_switch_10.setGeometry(QtCore.QRect(70, 180, 171, 17))
        self.program_sincostr_switch_10.setObjectName("program_sincostr_switch_10")
        self.program_sincostr_switch_11 = QtWidgets.QLabel(self.force_tab)
        self.program_sincostr_switch_11.setGeometry(QtCore.QRect(70, 210, 171, 17))
        self.program_sincostr_switch_11.setObjectName("program_sincostr_switch_11")
        self.label_123 = QtWidgets.QLabel(self.force_tab)
        self.label_123.setGeometry(QtCore.QRect(240, 210, 16, 17))
        self.label_123.setObjectName("label_123")
        self.help_label_4 = QtWidgets.QLabel(self.force_tab)
        self.help_label_4.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label_4.setObjectName("help_label_4")
        self.label_58 = QtWidgets.QLabel(self.force_tab)
        self.label_58.setGeometry(QtCore.QRect(750, 30, 16, 17))
        self.label_58.setObjectName("label_58")
        self.force_help_dropdown = QtWidgets.QComboBox(self.force_tab)
        self.force_help_dropdown.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.force_help_dropdown.setObjectName("force_help_dropdown")
        self.force_help_dropdown.addItem("")
        self.force_help_dropdown.addItem("")
        self.force_help_dropdown.addItem("")
        self.force_help_dropdown.addItem("")
        self.force_help_dropdown.addItem("")
        self.force_help_dropdown.addItem("")
        self.force_help = QtWidgets.QStackedWidget(self.force_tab)
        self.force_help.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.force_help.setObjectName("force_help")
        self.U_switch_help_page = QtWidgets.QWidget()
        self.U_switch_help_page.setObjectName("U_switch_help_page")
        self.U_switch_help_text = QtWidgets.QTextBrowser(self.U_switch_help_page)
        self.U_switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.U_switch_help_text.setObjectName("U_switch_help_text")
        self.force_help.addWidget(self.U_switch_help_page)
        self.W_Switch_help_page = QtWidgets.QWidget()
        self.W_Switch_help_page.setObjectName("W_Switch_help_page")
        self.W_Switch_help_text = QtWidgets.QTextBrowser(self.W_Switch_help_page)
        self.W_Switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 501))
        self.W_Switch_help_text.setObjectName("W_Switch_help_text")
        self.force_help.addWidget(self.W_Switch_help_page)
        self.T_switch_help_page = QtWidgets.QWidget()
        self.T_switch_help_page.setObjectName("T_switch_help_page")
        self.T_Switch_help_text = QtWidgets.QTextBrowser(self.T_switch_help_page)
        self.T_Switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.T_Switch_help_text.setObjectName("T_Switch_help_text")
        self.force_help.addWidget(self.T_switch_help_page)
        self.field_procedure_help_page = QtWidgets.QWidget()
        self.field_procedure_help_page.setObjectName("field_procedure_help_page")
        self.field_field_procedure_help_text = QtWidgets.QTextBrowser(self.field_procedure_help_page)
        self.field_field_procedure_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_field_procedure_help_text.setObjectName("field_field_procedure_help_text")
        self.force_help.addWidget(self.field_procedure_help_page)
        self.field_parameters_help_page = QtWidgets.QWidget()
        self.field_parameters_help_page.setObjectName("field_parameters_help_page")
        self.field_parameters_help_text = QtWidgets.QTextBrowser(self.field_parameters_help_page)
        self.field_parameters_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_parameters_help_text.setObjectName("field_parameters_help_text")
        self.force_help.addWidget(self.field_parameters_help_page)
        self.field_modes_help_page = QtWidgets.QWidget()
        self.field_modes_help_page.setObjectName("field_modes_help_page")
        self.field_procedure_help_text = QtWidgets.QTextBrowser(self.field_modes_help_page)
        self.field_procedure_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.field_procedure_help_text.setObjectName("field_procedure_help_text")
        self.force_help.addWidget(self.field_modes_help_page)
        self.force_modes = QtWidgets.QTableWidget(self.force_tab)
        self.force_modes.setGeometry(QtCore.QRect(250, 210, 281, 311))
        self.force_modes.setDragEnabled(False)
        self.force_modes.setRowCount(3)
        self.force_modes.setColumnCount(2)
        self.force_modes.setObjectName("force_modes")
        item = QtWidgets.QTableWidgetItem()
        self.force_modes.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.force_modes.setHorizontalHeaderItem(1, item)
        self.force_modes.horizontalHeader().setStretchLastSection(True)
        self.pushButton = QtWidgets.QPushButton(self.force_tab)
        self.pushButton.setGeometry(QtCore.QRect(280, 530, 89, 25))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.force_tab)
        self.pushButton_2.setGeometry(QtCore.QRect(420, 530, 89, 25))
        self.pushButton_2.setObjectName("pushButton_2")
        self.show_force_list_pushButton = QtWidgets.QPushButton(self.force_tab)
        self.show_force_list_pushButton.setEnabled(True)
        self.show_force_list_pushButton.setGeometry(QtCore.QRect(470, 150, 21, 25))
        self.show_force_list_pushButton.setObjectName("show_force_list_pushButton")
        self.force_list_frame = QtWidgets.QFrame(self.force_tab)
        self.force_list_frame.setGeometry(QtCore.QRect(260, 150, 231, 181))
        self.force_list_frame.setAutoFillBackground(True)
        self.force_list_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.force_list_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.force_list_frame.setObjectName("force_list_frame")
        self.buttonBox_2 = QtWidgets.QDialogButtonBox(self.force_list_frame)
        self.buttonBox_2.setGeometry(QtCore.QRect(30, 140, 166, 25))
        self.buttonBox_2.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox_2.setObjectName("buttonBox_2")
        self.force_list = QtWidgets.QListWidget(self.force_list_frame)
        self.force_list.setGeometry(QtCore.QRect(0, 0, 231, 121))
        self.force_list.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.force_list.setSelectionRectVisible(True)
        self.force_list.setObjectName("force_list")
        item = QtWidgets.QListWidgetItem()
        self.force_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.force_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.force_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.force_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.force_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.force_list.addItem(item)
        self.energy_transfer_tab.addTab(self.force_tab, "")
        self.io_tab = QtWidgets.QWidget()
        self.io_tab.setObjectName("io_tab")
        self.label_59 = QtWidgets.QLabel(self.io_tab)
        self.label_59.setGeometry(QtCore.QRect(240, 60, 16, 17))
        self.label_59.setObjectName("label_59")
        self.program_LES_switch_label_5 = QtWidgets.QLabel(self.io_tab)
        self.program_LES_switch_label_5.setGeometry(QtCore.QRect(70, 60, 161, 17))
        self.program_LES_switch_label_5.setObjectName("program_LES_switch_label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.io_tab)
        self.lineEdit.setGeometry(QtCore.QRect(250, 60, 61, 25))
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label_7 = QtWidgets.QLabel(self.io_tab)
        self.label_7.setGeometry(QtCore.QRect(70, 90, 161, 17))
        self.label_7.setObjectName("label_7")
        self.label_61 = QtWidgets.QLabel(self.io_tab)
        self.label_61.setGeometry(QtCore.QRect(240, 90, 16, 17))
        self.label_61.setObjectName("label_61")
        self.program_strong_reality_condition_2 = QtWidgets.QPushButton(self.io_tab)
        self.program_strong_reality_condition_2.setGeometry(QtCore.QRect(250, 90, 67, 23))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_strong_reality_condition_2.setFont(font)
        self.program_strong_reality_condition_2.setStyleSheet("QPushButton {text-align: left}")
        self.program_strong_reality_condition_2.setCheckable(True)
        self.program_strong_reality_condition_2.setChecked(True)
        self.program_strong_reality_condition_2.setAutoDefault(False)
        self.program_strong_reality_condition_2.setDefault(False)
        self.program_strong_reality_condition_2.setFlat(True)
        self.program_strong_reality_condition_2.setObjectName("program_strong_reality_condition_2")
        self.program_strong_reality_condition_5 = QtWidgets.QPushButton(self.io_tab)
        self.program_strong_reality_condition_5.setGeometry(QtCore.QRect(250, 120, 67, 23))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.program_strong_reality_condition_5.setFont(font)
        self.program_strong_reality_condition_5.setStyleSheet("QPushButton {text-align: left}")
        self.program_strong_reality_condition_5.setCheckable(True)
        self.program_strong_reality_condition_5.setChecked(True)
        self.program_strong_reality_condition_5.setAutoDefault(False)
        self.program_strong_reality_condition_5.setDefault(False)
        self.program_strong_reality_condition_5.setFlat(True)
        self.program_strong_reality_condition_5.setObjectName("program_strong_reality_condition_5")
        self.label_107 = QtWidgets.QLabel(self.io_tab)
        self.label_107.setGeometry(QtCore.QRect(70, 120, 161, 17))
        self.label_107.setObjectName("label_107")
        self.label_108 = QtWidgets.QLabel(self.io_tab)
        self.label_108.setGeometry(QtCore.QRect(240, 120, 16, 17))
        self.label_108.setObjectName("label_108")
        self.label_197 = QtWidgets.QLabel(self.io_tab)
        self.label_197.setGeometry(QtCore.QRect(320, 180, 16, 17))
        self.label_197.setObjectName("label_197")
        self.label_198 = QtWidgets.QLabel(self.io_tab)
        self.label_198.setGeometry(QtCore.QRect(460, 180, 16, 17))
        self.label_198.setObjectName("label_198")
        self.program_kind_label_22 = QtWidgets.QLabel(self.io_tab)
        self.program_kind_label_22.setGeometry(QtCore.QRect(70, 180, 161, 17))
        self.program_kind_label_22.setObjectName("program_kind_label_22")
        self.label_199 = QtWidgets.QLabel(self.io_tab)
        self.label_199.setGeometry(QtCore.QRect(390, 180, 16, 17))
        self.label_199.setObjectName("label_199")
        self.label_200 = QtWidgets.QLabel(self.io_tab)
        self.label_200.setGeometry(QtCore.QRect(240, 180, 16, 17))
        self.label_200.setObjectName("label_200")
        self.field_Ny_10 = QtWidgets.QLineEdit(self.io_tab)
        self.field_Ny_10.setGeometry(QtCore.QRect(330, 180, 51, 25))
        self.field_Ny_10.setText("")
        self.field_Ny_10.setObjectName("field_Ny_10")
        self.field_Nz_10 = QtWidgets.QLineEdit(self.io_tab)
        self.field_Nz_10.setGeometry(QtCore.QRect(400, 180, 51, 25))
        self.field_Nz_10.setText("")
        self.field_Nz_10.setObjectName("field_Nz_10")
        self.label_201 = QtWidgets.QLabel(self.io_tab)
        self.label_201.setGeometry(QtCore.QRect(250, 180, 16, 17))
        self.label_201.setObjectName("label_201")
        self.field_Nx_10 = QtWidgets.QLineEdit(self.io_tab)
        self.field_Nx_10.setGeometry(QtCore.QRect(260, 180, 51, 25))
        self.field_Nx_10.setText("")
        self.field_Nx_10.setObjectName("field_Nx_10")
        self.label_202 = QtWidgets.QLabel(self.io_tab)
        self.label_202.setGeometry(QtCore.QRect(320, 210, 16, 17))
        self.label_202.setObjectName("label_202")
        self.label_203 = QtWidgets.QLabel(self.io_tab)
        self.label_203.setGeometry(QtCore.QRect(460, 210, 16, 17))
        self.label_203.setObjectName("label_203")
        self.program_kind_label_23 = QtWidgets.QLabel(self.io_tab)
        self.program_kind_label_23.setGeometry(QtCore.QRect(70, 210, 161, 17))
        self.program_kind_label_23.setObjectName("program_kind_label_23")
        self.label_204 = QtWidgets.QLabel(self.io_tab)
        self.label_204.setGeometry(QtCore.QRect(390, 210, 16, 17))
        self.label_204.setObjectName("label_204")
        self.label_205 = QtWidgets.QLabel(self.io_tab)
        self.label_205.setGeometry(QtCore.QRect(240, 210, 16, 17))
        self.label_205.setObjectName("label_205")
        self.field_Ny_11 = QtWidgets.QLineEdit(self.io_tab)
        self.field_Ny_11.setGeometry(QtCore.QRect(330, 210, 51, 25))
        self.field_Ny_11.setText("")
        self.field_Ny_11.setObjectName("field_Ny_11")
        self.field_Nz_11 = QtWidgets.QLineEdit(self.io_tab)
        self.field_Nz_11.setGeometry(QtCore.QRect(400, 210, 51, 25))
        self.field_Nz_11.setText("")
        self.field_Nz_11.setObjectName("field_Nz_11")
        self.label_206 = QtWidgets.QLabel(self.io_tab)
        self.label_206.setGeometry(QtCore.QRect(250, 210, 16, 17))
        self.label_206.setObjectName("label_206")
        self.field_Nx_11 = QtWidgets.QLineEdit(self.io_tab)
        self.field_Nx_11.setGeometry(QtCore.QRect(260, 210, 51, 25))
        self.field_Nx_11.setText("")
        self.field_Nx_11.setObjectName("field_Nx_11")
        self.label_207 = QtWidgets.QLabel(self.io_tab)
        self.label_207.setGeometry(QtCore.QRect(250, 240, 16, 17))
        self.label_207.setObjectName("label_207")
        self.program_sincostr_switch_22 = QtWidgets.QLabel(self.io_tab)
        self.program_sincostr_switch_22.setGeometry(QtCore.QRect(70, 240, 171, 17))
        self.program_sincostr_switch_22.setObjectName("program_sincostr_switch_22")
        self.lineEdit_19 = QtWidgets.QLineEdit(self.io_tab)
        self.lineEdit_19.setGeometry(QtCore.QRect(260, 240, 191, 25))
        self.lineEdit_19.setText("")
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.label_208 = QtWidgets.QLabel(self.io_tab)
        self.label_208.setGeometry(QtCore.QRect(240, 240, 16, 17))
        self.label_208.setObjectName("label_208")
        self.label_209 = QtWidgets.QLabel(self.io_tab)
        self.label_209.setGeometry(QtCore.QRect(460, 240, 16, 17))
        self.label_209.setObjectName("label_209")
        self.program_sincostr_switch_23 = QtWidgets.QLabel(self.io_tab)
        self.program_sincostr_switch_23.setGeometry(QtCore.QRect(70, 270, 171, 17))
        self.program_sincostr_switch_23.setObjectName("program_sincostr_switch_23")
        self.force_modes_4 = QtWidgets.QTableWidget(self.io_tab)
        self.force_modes_4.setGeometry(QtCore.QRect(250, 270, 281, 121))
        self.force_modes_4.setDragEnabled(False)
        self.force_modes_4.setRowCount(3)
        self.force_modes_4.setColumnCount(2)
        self.force_modes_4.setObjectName("force_modes_4")
        item = QtWidgets.QTableWidgetItem()
        self.force_modes_4.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.force_modes_4.setHorizontalHeaderItem(1, item)
        self.force_modes_4.horizontalHeader().setStretchLastSection(True)
        self.pushButton_10 = QtWidgets.QPushButton(self.io_tab)
        self.pushButton_10.setGeometry(QtCore.QRect(280, 400, 89, 25))
        self.pushButton_10.setObjectName("pushButton_10")
        self.label_210 = QtWidgets.QLabel(self.io_tab)
        self.label_210.setGeometry(QtCore.QRect(240, 270, 16, 17))
        self.label_210.setObjectName("label_210")
        self.pushButton_11 = QtWidgets.QPushButton(self.io_tab)
        self.pushButton_11.setGeometry(QtCore.QRect(420, 400, 89, 25))
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_12 = QtWidgets.QPushButton(self.io_tab)
        self.pushButton_12.setGeometry(QtCore.QRect(280, 570, 89, 25))
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_13 = QtWidgets.QPushButton(self.io_tab)
        self.pushButton_13.setGeometry(QtCore.QRect(420, 570, 89, 25))
        self.pushButton_13.setObjectName("pushButton_13")
        self.program_sincostr_switch_24 = QtWidgets.QLabel(self.io_tab)
        self.program_sincostr_switch_24.setGeometry(QtCore.QRect(70, 440, 171, 17))
        self.program_sincostr_switch_24.setObjectName("program_sincostr_switch_24")
        self.force_modes_5 = QtWidgets.QTableWidget(self.io_tab)
        self.force_modes_5.setGeometry(QtCore.QRect(250, 440, 281, 121))
        self.force_modes_5.setDragEnabled(False)
        self.force_modes_5.setRowCount(3)
        self.force_modes_5.setColumnCount(2)
        self.force_modes_5.setObjectName("force_modes_5")
        item = QtWidgets.QTableWidgetItem()
        self.force_modes_5.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.force_modes_5.setHorizontalHeaderItem(1, item)
        self.force_modes_5.horizontalHeader().setStretchLastSection(True)
        self.label_211 = QtWidgets.QLabel(self.io_tab)
        self.label_211.setGeometry(QtCore.QRect(240, 440, 16, 17))
        self.label_211.setObjectName("label_211")
        self.label_212 = QtWidgets.QLabel(self.io_tab)
        self.label_212.setGeometry(QtCore.QRect(750, 30, 16, 17))
        self.label_212.setObjectName("label_212")
        self.help_label_13 = QtWidgets.QLabel(self.io_tab)
        self.help_label_13.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label_13.setObjectName("help_label_13")
        self.io_help = QtWidgets.QStackedWidget(self.io_tab)
        self.io_help.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.io_help.setObjectName("io_help")
        self.input_field_procedure_help_page = QtWidgets.QWidget()
        self.input_field_procedure_help_page.setObjectName("input_field_procedure_help_page")
        self.input_field_procedure_help_text = QtWidgets.QTextBrowser(self.input_field_procedure_help_page)
        self.input_field_procedure_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.input_field_procedure_help_text.setObjectName("input_field_procedure_help_text")
        self.io_help.addWidget(self.input_field_procedure_help_page)
        self.input_vx_vy_switch_help_page = QtWidgets.QWidget()
        self.input_vx_vy_switch_help_page.setObjectName("input_vx_vy_switch_help_page")
        self.input_vx_vy_switch_help_text = QtWidgets.QTextBrowser(self.input_vx_vy_switch_help_page)
        self.input_vx_vy_switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 501))
        self.input_vx_vy_switch_help_text.setObjectName("input_vx_vy_switch_help_text")
        self.io_help.addWidget(self.input_vx_vy_switch_help_page)
        self.output_vx_vy_switch_help_page = QtWidgets.QWidget()
        self.output_vx_vy_switch_help_page.setObjectName("output_vx_vy_switch_help_page")
        self.output_vx_vy_switch_help_text = QtWidgets.QTextBrowser(self.output_vx_vy_switch_help_page)
        self.output_vx_vy_switch_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.output_vx_vy_switch_help_text.setObjectName("output_vx_vy_switch_help_text")
        self.io_help.addWidget(self.output_vx_vy_switch_help_page)
        self.diagnostic_procedures_help_page = QtWidgets.QWidget()
        self.diagnostic_procedures_help_page.setObjectName("diagnostic_procedures_help_page")
        self.diagnostic_procedures_help_text = QtWidgets.QTextBrowser(self.diagnostic_procedures_help_page)
        self.diagnostic_procedures_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.diagnostic_procedures_help_text.setObjectName("diagnostic_procedures_help_text")
        self.io_help.addWidget(self.diagnostic_procedures_help_page)
        self.N_in_reduced_help_page = QtWidgets.QWidget()
        self.N_in_reduced_help_page.setObjectName("N_in_reduced_help_page")
        self.N_in_reduced_help_text = QtWidgets.QTextBrowser(self.N_in_reduced_help_page)
        self.N_in_reduced_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.N_in_reduced_help_text.setObjectName("N_in_reduced_help_text")
        self.io_help.addWidget(self.N_in_reduced_help_page)
        self.N_out_reduced_help_page = QtWidgets.QWidget()
        self.N_out_reduced_help_page.setObjectName("N_out_reduced_help_page")
        self.N_out_reduced_help_text = QtWidgets.QTextBrowser(self.N_out_reduced_help_page)
        self.N_out_reduced_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.N_out_reduced_help_text.setObjectName("N_out_reduced_help_text")
        self.io_help.addWidget(self.N_out_reduced_help_page)
        self.parameters_help_page = QtWidgets.QWidget()
        self.parameters_help_page.setObjectName("parameters_help_page")
        self.parameters_help_text = QtWidgets.QTextBrowser(self.parameters_help_page)
        self.parameters_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.parameters_help_text.setObjectName("parameters_help_text")
        self.io_help.addWidget(self.parameters_help_page)
        self.init_cond_modes_help_page = QtWidgets.QWidget()
        self.init_cond_modes_help_page.setObjectName("init_cond_modes_help_page")
        self.init_cond_modes_help_text = QtWidgets.QTextBrowser(self.init_cond_modes_help_page)
        self.init_cond_modes_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.init_cond_modes_help_text.setObjectName("init_cond_modes_help_text")
        self.io_help.addWidget(self.init_cond_modes_help_page)
        self.probes_help_page = QtWidgets.QWidget()
        self.probes_help_page.setObjectName("probes_help_page")
        self.probes_help_text = QtWidgets.QTextBrowser(self.probes_help_page)
        self.probes_help_text.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.probes_help_text.setObjectName("probes_help_text")
        self.io_help.addWidget(self.probes_help_page)
        self.io_help_dropdown = QtWidgets.QComboBox(self.io_tab)
        self.io_help_dropdown.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.io_help_dropdown.setObjectName("io_help_dropdown")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.io_help_dropdown.addItem("")
        self.pushButton_4 = QtWidgets.QPushButton(self.io_tab)
        self.pushButton_4.setEnabled(True)
        self.pushButton_4.setGeometry(QtCore.QRect(310, 60, 21, 25))
        self.pushButton_4.setObjectName("pushButton_4")
        self.input_list_frame = QtWidgets.QFrame(self.io_tab)
        self.input_list_frame.setEnabled(True)
        self.input_list_frame.setGeometry(QtCore.QRect(60, 80, 471, 241))
        self.input_list_frame.setAutoFillBackground(True)
        self.input_list_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.input_list_frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.input_list_frame.setObjectName("input_list_frame")
        self.listWidget_2 = QtWidgets.QListWidget(self.input_list_frame)
        self.listWidget_2.setGeometry(QtCore.QRect(240, 59, 210, 131))
        self.listWidget_2.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.listWidget_2.setSelectionRectVisible(True)
        self.listWidget_2.setObjectName("listWidget_2")
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget_2.addItem(item)
        self.buttonBox = QtWidgets.QDialogButtonBox(self.input_list_frame)
        self.buttonBox.setGeometry(QtCore.QRect(150, 210, 166, 25))
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.Input_list_stackedWidget = QtWidgets.QStackedWidget(self.input_list_frame)
        self.Input_list_stackedWidget.setGeometry(QtCore.QRect(10, 10, 210, 180))
        self.Input_list_stackedWidget.setObjectName("Input_list_stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.FLUID_INCOMPRESS_Input_list = QtWidgets.QListWidget(self.page)
        self.FLUID_INCOMPRESS_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.FLUID_INCOMPRESS_Input_list.setObjectName("FLUID_INCOMPRESS_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.FLUID_INCOMPRESS_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.SCALAR_INCOMPRESS_Input_list = QtWidgets.QListWidget(self.page_2)
        self.SCALAR_INCOMPRESS_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.SCALAR_INCOMPRESS_Input_list.setObjectName("SCALAR_INCOMPRESS_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.SCALAR_INCOMPRESS_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.RBC_Input_list = QtWidgets.QListWidget(self.page_3)
        self.RBC_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.RBC_Input_list.setObjectName("RBC_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.RBC_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.STRATIFIED_Input_list = QtWidgets.QListWidget(self.page_4)
        self.STRATIFIED_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.STRATIFIED_Input_list.setObjectName("STRATIFIED_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.STRATIFIED_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.MRBC_Input_list = QtWidgets.QListWidget(self.page_5)
        self.MRBC_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.MRBC_Input_list.setObjectName("MRBC_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.MRBC_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.MHD_INCOMPRESS_Input_list = QtWidgets.QListWidget(self.page_6)
        self.MHD_INCOMPRESS_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.MHD_INCOMPRESS_Input_list.setObjectName("MHD_INCOMPRESS_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_INCOMPRESS_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_6)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.KEPLERIAN_Input_list = QtWidgets.QListWidget(self.page_7)
        self.KEPLERIAN_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.KEPLERIAN_Input_list.setObjectName("KEPLERIAN_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.KEPLERIAN_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.MHD_SCALAR_INCOMPRESS_Input_list = QtWidgets.QListWidget(self.page_8)
        self.MHD_SCALAR_INCOMPRESS_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.MHD_SCALAR_INCOMPRESS_Input_list.setObjectName("MHD_SCALAR_INCOMPRESS_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.MHD_SCALAR_INCOMPRESS_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_8)
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.MHD_ASTRO_INCOMPRESS_Input_list = QtWidgets.QListWidget(self.page_9)
        self.MHD_ASTRO_INCOMPRESS_Input_list.setGeometry(QtCore.QRect(0, 0, 210, 180))
        self.MHD_ASTRO_INCOMPRESS_Input_list.setObjectName("MHD_ASTRO_INCOMPRESS_Input_list")
        item = QtWidgets.QListWidgetItem()
        self.MHD_ASTRO_INCOMPRESS_Input_list.addItem(item)
        self.Input_list_stackedWidget.addWidget(self.page_9)
        self.radioButton = QtWidgets.QRadioButton(self.input_list_frame)
        self.radioButton.setGeometry(QtCore.QRect(240, 10, 112, 23))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.input_list_frame)
        self.radioButton_2.setGeometry(QtCore.QRect(240, 30, 112, 23))
        self.radioButton_2.setObjectName("radioButton_2")
        self.program_sincostr_switch_26 = QtWidgets.QLabel(self.io_tab)
        self.program_sincostr_switch_26.setGeometry(QtCore.QRect(70, 150, 171, 17))
        self.program_sincostr_switch_26.setObjectName("program_sincostr_switch_26")
        self.lineEdit_21 = QtWidgets.QLineEdit(self.io_tab)
        self.lineEdit_21.setGeometry(QtCore.QRect(260, 150, 191, 25))
        self.lineEdit_21.setText("")
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.label_217 = QtWidgets.QLabel(self.io_tab)
        self.label_217.setGeometry(QtCore.QRect(240, 150, 16, 17))
        self.label_217.setObjectName("label_217")
        self.label_218 = QtWidgets.QLabel(self.io_tab)
        self.label_218.setGeometry(QtCore.QRect(460, 150, 16, 17))
        self.label_218.setObjectName("label_218")
        self.label_219 = QtWidgets.QLabel(self.io_tab)
        self.label_219.setGeometry(QtCore.QRect(250, 150, 16, 17))
        self.label_219.setObjectName("label_219")
        self.label_217.raise_()
        self.program_sincostr_switch_26.raise_()
        self.lineEdit_21.raise_()
        self.label_218.raise_()
        self.label_219.raise_()
        self.label_59.raise_()
        self.program_LES_switch_label_5.raise_()
        self.lineEdit.raise_()
        self.label_7.raise_()
        self.label_61.raise_()
        self.program_strong_reality_condition_2.raise_()
        self.program_strong_reality_condition_5.raise_()
        self.label_107.raise_()
        self.label_108.raise_()
        self.label_197.raise_()
        self.label_198.raise_()
        self.program_kind_label_22.raise_()
        self.label_199.raise_()
        self.label_200.raise_()
        self.field_Ny_10.raise_()
        self.field_Nz_10.raise_()
        self.label_201.raise_()
        self.field_Nx_10.raise_()
        self.label_202.raise_()
        self.label_203.raise_()
        self.program_kind_label_23.raise_()
        self.label_204.raise_()
        self.label_205.raise_()
        self.field_Ny_11.raise_()
        self.field_Nz_11.raise_()
        self.label_206.raise_()
        self.field_Nx_11.raise_()
        self.label_207.raise_()
        self.program_sincostr_switch_22.raise_()
        self.lineEdit_19.raise_()
        self.label_208.raise_()
        self.label_209.raise_()
        self.program_sincostr_switch_23.raise_()
        self.force_modes_4.raise_()
        self.pushButton_10.raise_()
        self.label_210.raise_()
        self.pushButton_11.raise_()
        self.pushButton_12.raise_()
        self.pushButton_13.raise_()
        self.program_sincostr_switch_24.raise_()
        self.force_modes_5.raise_()
        self.label_211.raise_()
        self.label_212.raise_()
        self.help_label_13.raise_()
        self.io_help.raise_()
        self.io_help_dropdown.raise_()
        self.pushButton_4.raise_()
        self.input_list_frame.raise_()
        self.energy_transfer_tab.addTab(self.io_tab, "")
        self.iotime = QtWidgets.QWidget()
        self.iotime.setObjectName("iotime")
        self.io_help_dropdown_2 = QtWidgets.QComboBox(self.iotime)
        self.io_help_dropdown_2.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.io_help_dropdown_2.setObjectName("io_help_dropdown_2")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.io_help_dropdown_2.addItem("")
        self.label_213 = QtWidgets.QLabel(self.iotime)
        self.label_213.setGeometry(QtCore.QRect(750, 30, 16, 17))
        self.label_213.setObjectName("label_213")
        self.help_label_14 = QtWidgets.QLabel(self.iotime)
        self.help_label_14.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label_14.setObjectName("help_label_14")
        self.io_help_2 = QtWidgets.QStackedWidget(self.iotime)
        self.io_help_2.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.io_help_2.setObjectName("io_help_2")
        self.input_field_procedure_help_page_2 = QtWidgets.QWidget()
        self.input_field_procedure_help_page_2.setObjectName("input_field_procedure_help_page_2")
        self.input_field_procedure_help_text_2 = QtWidgets.QTextBrowser(self.input_field_procedure_help_page_2)
        self.input_field_procedure_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.input_field_procedure_help_text_2.setObjectName("input_field_procedure_help_text_2")
        self.io_help_2.addWidget(self.input_field_procedure_help_page_2)
        self.input_vx_vy_switch_help_page_2 = QtWidgets.QWidget()
        self.input_vx_vy_switch_help_page_2.setObjectName("input_vx_vy_switch_help_page_2")
        self.input_vx_vy_switch_help_text_2 = QtWidgets.QTextBrowser(self.input_vx_vy_switch_help_page_2)
        self.input_vx_vy_switch_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 501))
        self.input_vx_vy_switch_help_text_2.setObjectName("input_vx_vy_switch_help_text_2")
        self.io_help_2.addWidget(self.input_vx_vy_switch_help_page_2)
        self.output_vx_vy_switch_help_page_2 = QtWidgets.QWidget()
        self.output_vx_vy_switch_help_page_2.setObjectName("output_vx_vy_switch_help_page_2")
        self.output_vx_vy_switch_help_text_2 = QtWidgets.QTextBrowser(self.output_vx_vy_switch_help_page_2)
        self.output_vx_vy_switch_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.output_vx_vy_switch_help_text_2.setObjectName("output_vx_vy_switch_help_text_2")
        self.io_help_2.addWidget(self.output_vx_vy_switch_help_page_2)
        self.diagnostic_procedures_help_page_2 = QtWidgets.QWidget()
        self.diagnostic_procedures_help_page_2.setObjectName("diagnostic_procedures_help_page_2")
        self.diagnostic_procedures_help_text_2 = QtWidgets.QTextBrowser(self.diagnostic_procedures_help_page_2)
        self.diagnostic_procedures_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.diagnostic_procedures_help_text_2.setObjectName("diagnostic_procedures_help_text_2")
        self.io_help_2.addWidget(self.diagnostic_procedures_help_page_2)
        self.N_in_reduced_help_page_2 = QtWidgets.QWidget()
        self.N_in_reduced_help_page_2.setObjectName("N_in_reduced_help_page_2")
        self.N_in_reduced_help_text_2 = QtWidgets.QTextBrowser(self.N_in_reduced_help_page_2)
        self.N_in_reduced_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.N_in_reduced_help_text_2.setObjectName("N_in_reduced_help_text_2")
        self.io_help_2.addWidget(self.N_in_reduced_help_page_2)
        self.N_out_reduced_help_page_2 = QtWidgets.QWidget()
        self.N_out_reduced_help_page_2.setObjectName("N_out_reduced_help_page_2")
        self.N_out_reduced_help_text_2 = QtWidgets.QTextBrowser(self.N_out_reduced_help_page_2)
        self.N_out_reduced_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.N_out_reduced_help_text_2.setObjectName("N_out_reduced_help_text_2")
        self.io_help_2.addWidget(self.N_out_reduced_help_page_2)
        self.parameters_help_page_2 = QtWidgets.QWidget()
        self.parameters_help_page_2.setObjectName("parameters_help_page_2")
        self.parameters_help_text_2 = QtWidgets.QTextBrowser(self.parameters_help_page_2)
        self.parameters_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.parameters_help_text_2.setObjectName("parameters_help_text_2")
        self.io_help_2.addWidget(self.parameters_help_page_2)
        self.init_cond_modes_help_page_2 = QtWidgets.QWidget()
        self.init_cond_modes_help_page_2.setObjectName("init_cond_modes_help_page_2")
        self.init_cond_modes_help_text_2 = QtWidgets.QTextBrowser(self.init_cond_modes_help_page_2)
        self.init_cond_modes_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.init_cond_modes_help_text_2.setObjectName("init_cond_modes_help_text_2")
        self.io_help_2.addWidget(self.init_cond_modes_help_page_2)
        self.probes_help_page_2 = QtWidgets.QWidget()
        self.probes_help_page_2.setObjectName("probes_help_page_2")
        self.probes_help_text_2 = QtWidgets.QTextBrowser(self.probes_help_page_2)
        self.probes_help_text_2.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.probes_help_text_2.setObjectName("probes_help_text_2")
        self.io_help_2.addWidget(self.probes_help_page_2)
        self.io_time_flux_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_flux_save_last.setGeometry(QtCore.QRect(410, 370, 61, 25))
        self.io_time_flux_save_last.setText("")
        self.io_time_flux_save_last.setObjectName("io_time_flux_save_last")
        self.label_67 = QtWidgets.QLabel(self.iotime)
        self.label_67.setGeometry(QtCore.QRect(230, 370, 16, 17))
        self.label_67.setObjectName("label_67")
        self.io_time_shell_to_shell_save_last_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_shell_to_shell_save_last_2.setGeometry(QtCore.QRect(410, 490, 61, 25))
        self.io_time_shell_to_shell_save_last_2.setText("")
        self.io_time_shell_to_shell_save_last_2.setObjectName("io_time_shell_to_shell_save_last_2")
        self.io_time_flux_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_flux_save_interval.setGeometry(QtCore.QRect(330, 250, 61, 25))
        self.io_time_flux_save_interval.setText("")
        self.io_time_flux_save_interval.setObjectName("io_time_flux_save_interval")
        self.io_time_field_k_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_k_save_last.setGeometry(QtCore.QRect(410, 190, 61, 25))
        self.io_time_field_k_save_last.setText("")
        self.io_time_field_k_save_last.setObjectName("io_time_field_k_save_last")
        self.label_74 = QtWidgets.QLabel(self.iotime)
        self.label_74.setGeometry(QtCore.QRect(240, 550, 16, 17))
        self.label_74.setObjectName("label_74")
        self.io_time_real_field_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_real_field_save_first.setGeometry(QtCore.QRect(250, 160, 61, 25))
        self.io_time_real_field_save_first.setText("")
        self.io_time_real_field_save_first.setObjectName("io_time_real_field_save_first")
        self.io_time_pressure_spectrum_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_spectrum_save_interval.setGeometry(QtCore.QRect(330, 340, 61, 25))
        self.io_time_pressure_spectrum_save_interval.setText("")
        self.io_time_pressure_spectrum_save_interval.setObjectName("io_time_pressure_spectrum_save_interval")
        self.io_time_ring_to_ring_save_last_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_to_ring_save_last_2.setGeometry(QtCore.QRect(410, 520, 61, 25))
        self.io_time_ring_to_ring_save_last_2.setText("")
        self.io_time_ring_to_ring_save_last_2.setObjectName("io_time_ring_to_ring_save_last_2")
        self.io_time_pressure_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_save_interval.setGeometry(QtCore.QRect(330, 280, 61, 25))
        self.io_time_pressure_save_interval.setText("")
        self.io_time_pressure_save_interval.setObjectName("io_time_pressure_save_interval")
        self.io_time_global_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_global_save_last.setGeometry(QtCore.QRect(410, 40, 61, 25))
        self.io_time_global_save_last.setText("")
        self.io_time_global_save_last.setObjectName("io_time_global_save_last")
        self.label_47 = QtWidgets.QLabel(self.iotime)
        self.label_47.setGeometry(QtCore.QRect(230, 130, 16, 17))
        self.label_47.setObjectName("label_47")
        self.label_21 = QtWidgets.QLabel(self.iotime)
        self.label_21.setGeometry(QtCore.QRect(230, 100, 16, 17))
        self.label_21.setObjectName("label_21")
        self.program_kind_label_5 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_5.setGeometry(QtCore.QRect(50, 40, 161, 17))
        self.program_kind_label_5.setObjectName("program_kind_label_5")
        self.io_time_ring_spectrum_save_first_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_spectrum_save_first_2.setGeometry(QtCore.QRect(250, 520, 61, 25))
        self.io_time_ring_spectrum_save_first_2.setText("")
        self.io_time_ring_spectrum_save_first_2.setObjectName("io_time_ring_spectrum_save_first_2")
        self.io_time_ring_spectrum_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_spectrum_save_last.setGeometry(QtCore.QRect(410, 430, 61, 25))
        self.io_time_ring_spectrum_save_last.setText("")
        self.io_time_ring_spectrum_save_last.setObjectName("io_time_ring_spectrum_save_last")
        self.program_kind_label_17 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_17.setGeometry(QtCore.QRect(50, 340, 161, 17))
        self.program_kind_label_17.setObjectName("program_kind_label_17")
        self.io_time_ring_to_ring_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_to_ring_save_interval.setGeometry(QtCore.QRect(330, 370, 61, 25))
        self.io_time_ring_to_ring_save_interval.setText("")
        self.io_time_ring_to_ring_save_interval.setObjectName("io_time_ring_to_ring_save_interval")
        self.program_kind_label_15 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_15.setGeometry(QtCore.QRect(50, 250, 161, 17))
        self.program_kind_label_15.setObjectName("program_kind_label_15")
        self.program_kind_label_19 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_19.setGeometry(QtCore.QRect(50, 430, 191, 17))
        self.program_kind_label_19.setObjectName("program_kind_label_19")
        self.program_kind_label_27 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_27.setGeometry(QtCore.QRect(50, 550, 181, 17))
        self.program_kind_label_27.setObjectName("program_kind_label_27")
        self.io_time_shell_to_shell_save_interval_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_shell_to_shell_save_interval_2.setGeometry(QtCore.QRect(330, 520, 61, 25))
        self.io_time_shell_to_shell_save_interval_2.setText("")
        self.io_time_shell_to_shell_save_interval_2.setObjectName("io_time_shell_to_shell_save_interval_2")
        self.program_kind_label_11 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_11.setGeometry(QtCore.QRect(50, 130, 161, 17))
        self.program_kind_label_11.setObjectName("program_kind_label_11")
        self.io_time_flux_save_interval_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_flux_save_interval_2.setGeometry(QtCore.QRect(330, 460, 61, 25))
        self.io_time_flux_save_interval_2.setText("")
        self.io_time_flux_save_interval_2.setObjectName("io_time_flux_save_interval_2")
        self.label_60 = QtWidgets.QLabel(self.iotime)
        self.label_60.setGeometry(QtCore.QRect(230, 160, 16, 17))
        self.label_60.setObjectName("label_60")
        self.io_time_pressure_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_save_first.setGeometry(QtCore.QRect(250, 400, 61, 25))
        self.io_time_pressure_save_first.setText("")
        self.io_time_pressure_save_first.setObjectName("io_time_pressure_save_first")
        self.label_75 = QtWidgets.QLabel(self.iotime)
        self.label_75.setGeometry(QtCore.QRect(230, 520, 16, 17))
        self.label_75.setObjectName("label_75")
        self.label_76 = QtWidgets.QLabel(self.iotime)
        self.label_76.setGeometry(QtCore.QRect(230, 460, 16, 17))
        self.label_76.setObjectName("label_76")
        self.program_kind_label_21 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_21.setGeometry(QtCore.QRect(50, 400, 161, 17))
        self.program_kind_label_21.setObjectName("program_kind_label_21")
        self.io_time_real_field_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_real_field_save_last.setGeometry(QtCore.QRect(410, 160, 61, 25))
        self.io_time_real_field_save_last.setText("")
        self.io_time_real_field_save_last.setObjectName("io_time_real_field_save_last")
        self.program_kind_label_18 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_18.setGeometry(QtCore.QRect(50, 310, 161, 17))
        self.program_kind_label_18.setObjectName("program_kind_label_18")
        self.io_time_spectrum_save_first_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_spectrum_save_first_2.setGeometry(QtCore.QRect(250, 580, 61, 25))
        self.io_time_spectrum_save_first_2.setText("")
        self.io_time_spectrum_save_first_2.setObjectName("io_time_spectrum_save_first_2")
        self.label_18 = QtWidgets.QLabel(self.iotime)
        self.label_18.setGeometry(QtCore.QRect(230, 70, 16, 17))
        self.label_18.setObjectName("label_18")
        self.label_63 = QtWidgets.QLabel(self.iotime)
        self.label_63.setGeometry(QtCore.QRect(230, 220, 16, 17))
        self.label_63.setObjectName("label_63")
        self.label_71 = QtWidgets.QLabel(self.iotime)
        self.label_71.setGeometry(QtCore.QRect(230, 580, 16, 17))
        self.label_71.setObjectName("label_71")
        self.io_time_shell_to_shell_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_shell_to_shell_save_first.setGeometry(QtCore.QRect(250, 340, 61, 25))
        self.io_time_shell_to_shell_save_first.setText("")
        self.io_time_shell_to_shell_save_first.setObjectName("io_time_shell_to_shell_save_first")
        self.io_time_shell_to_shell_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_shell_to_shell_save_last.setGeometry(QtCore.QRect(410, 280, 61, 25))
        self.io_time_shell_to_shell_save_last.setText("")
        self.io_time_shell_to_shell_save_last.setObjectName("io_time_shell_to_shell_save_last")
        self.io_time_spectrum_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_spectrum_save_first.setGeometry(QtCore.QRect(250, 370, 61, 25))
        self.io_time_spectrum_save_first.setText("")
        self.io_time_spectrum_save_first.setObjectName("io_time_spectrum_save_first")
        self.io_time_flux_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_flux_save_first.setGeometry(QtCore.QRect(250, 250, 61, 25))
        self.io_time_flux_save_first.setText("")
        self.io_time_flux_save_first.setObjectName("io_time_flux_save_first")
        self.io_time_pressure_spectrum_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_spectrum_save_last.setGeometry(QtCore.QRect(410, 250, 61, 25))
        self.io_time_pressure_spectrum_save_last.setText("")
        self.io_time_pressure_spectrum_save_last.setObjectName("io_time_pressure_spectrum_save_last")
        self.program_kind_label_14 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_14.setGeometry(QtCore.QRect(50, 220, 161, 17))
        self.program_kind_label_14.setObjectName("program_kind_label_14")
        self.program_kind_label_10 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_10.setGeometry(QtCore.QRect(50, 100, 161, 17))
        self.program_kind_label_10.setObjectName("program_kind_label_10")
        self.label_62 = QtWidgets.QLabel(self.iotime)
        self.label_62.setGeometry(QtCore.QRect(230, 190, 16, 17))
        self.label_62.setObjectName("label_62")
        self.program_kind_label_9 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_9.setGeometry(QtCore.QRect(50, 70, 161, 17))
        self.program_kind_label_9.setObjectName("program_kind_label_9")
        self.io_time_complex_field_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_complex_field_save_last.setGeometry(QtCore.QRect(410, 70, 61, 25))
        self.io_time_complex_field_save_last.setText("")
        self.io_time_complex_field_save_last.setObjectName("io_time_complex_field_save_last")
        self.io_time_spectrum_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_spectrum_save_last.setGeometry(QtCore.QRect(410, 340, 61, 25))
        self.io_time_spectrum_save_last.setText("")
        self.io_time_spectrum_save_last.setObjectName("io_time_spectrum_save_last")
        self.io_time_field_r_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_r_save_last.setGeometry(QtCore.QRect(410, 220, 61, 25))
        self.io_time_field_r_save_last.setText("")
        self.io_time_field_r_save_last.setObjectName("io_time_field_r_save_last")
        self.io_time_field_reduced_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_reduced_save_last.setGeometry(QtCore.QRect(410, 130, 61, 25))
        self.io_time_field_reduced_save_last.setText("")
        self.io_time_field_reduced_save_last.setObjectName("io_time_field_reduced_save_last")
        self.io_time_complex_field_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_complex_field_save_interval.setGeometry(QtCore.QRect(330, 70, 61, 25))
        self.io_time_complex_field_save_interval.setText("")
        self.io_time_complex_field_save_interval.setObjectName("io_time_complex_field_save_interval")
        self.program_kind_label_30 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_30.setGeometry(QtCore.QRect(50, 580, 161, 17))
        self.program_kind_label_30.setObjectName("program_kind_label_30")
        self.program_kind_label_20 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_20.setGeometry(QtCore.QRect(50, 280, 161, 17))
        self.program_kind_label_20.setObjectName("program_kind_label_20")
        self.io_time_field_frequent_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_frequent_save_first.setGeometry(QtCore.QRect(250, 100, 61, 25))
        self.io_time_field_frequent_save_first.setText("")
        self.io_time_field_frequent_save_first.setObjectName("io_time_field_frequent_save_first")
        self.io_time_ring_to_ring_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_to_ring_save_last.setGeometry(QtCore.QRect(410, 310, 61, 25))
        self.io_time_ring_to_ring_save_last.setText("")
        self.io_time_ring_to_ring_save_last.setObjectName("io_time_ring_to_ring_save_last")
        self.program_kind_label_13 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_13.setGeometry(QtCore.QRect(50, 190, 161, 17))
        self.program_kind_label_13.setObjectName("program_kind_label_13")
        self.io_time_ring_to_ring_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_to_ring_save_first.setGeometry(QtCore.QRect(250, 280, 61, 25))
        self.io_time_ring_to_ring_save_first.setText("")
        self.io_time_ring_to_ring_save_first.setObjectName("io_time_ring_to_ring_save_first")
        self.io_time_field_frequent_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_frequent_save_last.setGeometry(QtCore.QRect(410, 100, 61, 25))
        self.io_time_field_frequent_save_last.setText("")
        self.io_time_field_frequent_save_last.setObjectName("io_time_field_frequent_save_last")
        self.io_time_complex_field_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_complex_field_save_first.setGeometry(QtCore.QRect(250, 70, 61, 25))
        self.io_time_complex_field_save_first.setText("")
        self.io_time_complex_field_save_first.setObjectName("io_time_complex_field_save_first")
        self.io_time_field_r_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_r_save_first.setGeometry(QtCore.QRect(250, 220, 61, 25))
        self.io_time_field_r_save_first.setText("")
        self.io_time_field_r_save_first.setObjectName("io_time_field_r_save_first")
        self.label_68 = QtWidgets.QLabel(self.iotime)
        self.label_68.setGeometry(QtCore.QRect(230, 340, 16, 17))
        self.label_68.setObjectName("label_68")
        self.io_time_field_r_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_r_save_interval.setGeometry(QtCore.QRect(330, 220, 61, 25))
        self.io_time_field_r_save_interval.setText("")
        self.io_time_field_r_save_interval.setObjectName("io_time_field_r_save_interval")
        self.label_66 = QtWidgets.QLabel(self.iotime)
        self.label_66.setGeometry(QtCore.QRect(230, 250, 16, 17))
        self.label_66.setObjectName("label_66")
        self.io_time_field_k_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_k_save_interval.setGeometry(QtCore.QRect(330, 190, 61, 25))
        self.io_time_field_k_save_interval.setText("")
        self.io_time_field_k_save_interval.setObjectName("io_time_field_k_save_interval")
        self.io_time_spectrum_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_spectrum_save_interval.setGeometry(QtCore.QRect(330, 400, 61, 25))
        self.io_time_spectrum_save_interval.setText("")
        self.io_time_spectrum_save_interval.setObjectName("io_time_spectrum_save_interval")
        self.label_72 = QtWidgets.QLabel(self.iotime)
        self.label_72.setGeometry(QtCore.QRect(230, 490, 16, 17))
        self.label_72.setObjectName("label_72")
        self.program_kind_label_26 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_26.setGeometry(QtCore.QRect(50, 460, 161, 17))
        self.program_kind_label_26.setObjectName("program_kind_label_26")
        self.io_time_global_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_global_save_first.setGeometry(QtCore.QRect(250, 40, 61, 25))
        self.io_time_global_save_first.setText("")
        self.io_time_global_save_first.setObjectName("io_time_global_save_first")
        self.io_time_field_reduced_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_reduced_save_first.setGeometry(QtCore.QRect(250, 130, 61, 25))
        self.io_time_field_reduced_save_first.setText("")
        self.io_time_field_reduced_save_first.setObjectName("io_time_field_reduced_save_first")
        self.io_time_pressure_spectrum_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_spectrum_save_first.setGeometry(QtCore.QRect(250, 430, 61, 25))
        self.io_time_pressure_spectrum_save_first.setText("")
        self.io_time_pressure_spectrum_save_first.setObjectName("io_time_pressure_spectrum_save_first")
        self.label_65 = QtWidgets.QLabel(self.iotime)
        self.label_65.setGeometry(QtCore.QRect(230, 400, 16, 17))
        self.label_65.setObjectName("label_65")
        self.program_kind_label_16 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_16.setGeometry(QtCore.QRect(50, 370, 161, 17))
        self.program_kind_label_16.setObjectName("program_kind_label_16")
        self.io_time_ring_to_ring_save_first_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_to_ring_save_first_2.setGeometry(QtCore.QRect(250, 490, 61, 25))
        self.io_time_ring_to_ring_save_first_2.setText("")
        self.io_time_ring_to_ring_save_first_2.setObjectName("io_time_ring_to_ring_save_first_2")
        self.io_time_flux_save_last_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_flux_save_last_2.setGeometry(QtCore.QRect(410, 580, 61, 25))
        self.io_time_flux_save_last_2.setText("")
        self.io_time_flux_save_last_2.setObjectName("io_time_flux_save_last_2")
        self.io_time_field_k_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_k_save_first.setGeometry(QtCore.QRect(250, 190, 61, 25))
        self.io_time_field_k_save_first.setText("")
        self.io_time_field_k_save_first.setObjectName("io_time_field_k_save_first")
        self.io_time_pressure_save_last = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_save_last.setGeometry(QtCore.QRect(410, 400, 61, 25))
        self.io_time_pressure_save_last.setText("")
        self.io_time_pressure_save_last.setObjectName("io_time_pressure_save_last")
        self.label_70 = QtWidgets.QLabel(self.iotime)
        self.label_70.setGeometry(QtCore.QRect(230, 280, 16, 17))
        self.label_70.setObjectName("label_70")
        self.io_time_pressure_spectrum_save_last_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_spectrum_save_last_2.setGeometry(QtCore.QRect(410, 460, 61, 25))
        self.io_time_pressure_spectrum_save_last_2.setText("")
        self.io_time_pressure_spectrum_save_last_2.setObjectName("io_time_pressure_spectrum_save_last_2")
        self.io_time_flux_save_first_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_flux_save_first_2.setGeometry(QtCore.QRect(250, 460, 61, 25))
        self.io_time_flux_save_first_2.setText("")
        self.io_time_flux_save_first_2.setObjectName("io_time_flux_save_first_2")
        self.io_time_ring_to_ring_save_interval_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_to_ring_save_interval_2.setGeometry(QtCore.QRect(330, 580, 61, 25))
        self.io_time_ring_to_ring_save_interval_2.setText("")
        self.io_time_ring_to_ring_save_interval_2.setObjectName("io_time_ring_to_ring_save_interval_2")
        self.label_64 = QtWidgets.QLabel(self.iotime)
        self.label_64.setGeometry(QtCore.QRect(230, 310, 16, 17))
        self.label_64.setObjectName("label_64")
        self.label_17 = QtWidgets.QLabel(self.iotime)
        self.label_17.setGeometry(QtCore.QRect(230, 40, 16, 17))
        self.label_17.setObjectName("label_17")
        self.io_time_global_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_global_save_interval.setGeometry(QtCore.QRect(330, 40, 61, 25))
        self.io_time_global_save_interval.setText("")
        self.io_time_global_save_interval.setObjectName("io_time_global_save_interval")
        self.io_time_ring_spectrum_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_spectrum_save_interval.setGeometry(QtCore.QRect(330, 430, 61, 25))
        self.io_time_ring_spectrum_save_interval.setText("")
        self.io_time_ring_spectrum_save_interval.setObjectName("io_time_ring_spectrum_save_interval")
        self.io_time_field_frequent_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_frequent_save_interval.setGeometry(QtCore.QRect(330, 100, 61, 25))
        self.io_time_field_frequent_save_interval.setText("")
        self.io_time_field_frequent_save_interval.setObjectName("io_time_field_frequent_save_interval")
        self.io_time_shell_to_shell_save_first_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_shell_to_shell_save_first_2.setGeometry(QtCore.QRect(250, 550, 61, 25))
        self.io_time_shell_to_shell_save_first_2.setText("")
        self.io_time_shell_to_shell_save_first_2.setObjectName("io_time_shell_to_shell_save_first_2")
        self.io_time_pressure_save_interval_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_save_interval_2.setGeometry(QtCore.QRect(330, 490, 61, 25))
        self.io_time_pressure_save_interval_2.setText("")
        self.io_time_pressure_save_interval_2.setObjectName("io_time_pressure_save_interval_2")
        self.io_time_spectrum_save_last_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_spectrum_save_last_2.setGeometry(QtCore.QRect(410, 550, 61, 25))
        self.io_time_spectrum_save_last_2.setText("")
        self.io_time_spectrum_save_last_2.setObjectName("io_time_spectrum_save_last_2")
        self.program_kind_label_12 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_12.setGeometry(QtCore.QRect(50, 160, 161, 17))
        self.program_kind_label_12.setObjectName("program_kind_label_12")
        self.io_time_field_reduced_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_field_reduced_save_interval.setGeometry(QtCore.QRect(330, 130, 61, 25))
        self.io_time_field_reduced_save_interval.setText("")
        self.io_time_field_reduced_save_interval.setObjectName("io_time_field_reduced_save_interval")
        self.io_time_shell_to_shell_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_shell_to_shell_save_interval.setGeometry(QtCore.QRect(330, 310, 61, 25))
        self.io_time_shell_to_shell_save_interval.setText("")
        self.io_time_shell_to_shell_save_interval.setObjectName("io_time_shell_to_shell_save_interval")
        self.program_kind_label_28 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_28.setGeometry(QtCore.QRect(50, 520, 171, 17))
        self.program_kind_label_28.setObjectName("program_kind_label_28")
        self.program_kind_label_29 = QtWidgets.QLabel(self.iotime)
        self.program_kind_label_29.setGeometry(QtCore.QRect(50, 490, 171, 17))
        self.program_kind_label_29.setObjectName("program_kind_label_29")
        self.io_time_pressure_spectrum_save_interval_2 = QtWidgets.QLineEdit(self.iotime)
        self.io_time_pressure_spectrum_save_interval_2.setGeometry(QtCore.QRect(330, 550, 61, 25))
        self.io_time_pressure_spectrum_save_interval_2.setText("")
        self.io_time_pressure_spectrum_save_interval_2.setObjectName("io_time_pressure_spectrum_save_interval_2")
        self.io_time_real_field_save_interval = QtWidgets.QLineEdit(self.iotime)
        self.io_time_real_field_save_interval.setGeometry(QtCore.QRect(330, 160, 61, 25))
        self.io_time_real_field_save_interval.setText("")
        self.io_time_real_field_save_interval.setObjectName("io_time_real_field_save_interval")
        self.io_time_ring_spectrum_save_first = QtWidgets.QLineEdit(self.iotime)
        self.io_time_ring_spectrum_save_first.setGeometry(QtCore.QRect(250, 310, 61, 25))
        self.io_time_ring_spectrum_save_first.setText("")
        self.io_time_ring_spectrum_save_first.setObjectName("io_time_ring_spectrum_save_first")
        self.label_69 = QtWidgets.QLabel(self.iotime)
        self.label_69.setGeometry(QtCore.QRect(230, 430, 16, 17))
        self.label_69.setObjectName("label_69")
        self.energy_transfer_tab.addTab(self.iotime, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.io_help_5 = QtWidgets.QStackedWidget(self.tab)
        self.io_help_5.setGeometry(QtCore.QRect(550, 60, 491, 511))
        self.io_help_5.setObjectName("io_help_5")
        self.input_field_procedure_help_page_5 = QtWidgets.QWidget()
        self.input_field_procedure_help_page_5.setObjectName("input_field_procedure_help_page_5")
        self.input_field_procedure_help_text_5 = QtWidgets.QTextBrowser(self.input_field_procedure_help_page_5)
        self.input_field_procedure_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.input_field_procedure_help_text_5.setObjectName("input_field_procedure_help_text_5")
        self.io_help_5.addWidget(self.input_field_procedure_help_page_5)
        self.input_vx_vy_switch_help_page_5 = QtWidgets.QWidget()
        self.input_vx_vy_switch_help_page_5.setObjectName("input_vx_vy_switch_help_page_5")
        self.input_vx_vy_switch_help_text_5 = QtWidgets.QTextBrowser(self.input_vx_vy_switch_help_page_5)
        self.input_vx_vy_switch_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 501))
        self.input_vx_vy_switch_help_text_5.setObjectName("input_vx_vy_switch_help_text_5")
        self.io_help_5.addWidget(self.input_vx_vy_switch_help_page_5)
        self.output_vx_vy_switch_help_page_5 = QtWidgets.QWidget()
        self.output_vx_vy_switch_help_page_5.setObjectName("output_vx_vy_switch_help_page_5")
        self.output_vx_vy_switch_help_text_5 = QtWidgets.QTextBrowser(self.output_vx_vy_switch_help_page_5)
        self.output_vx_vy_switch_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.output_vx_vy_switch_help_text_5.setObjectName("output_vx_vy_switch_help_text_5")
        self.io_help_5.addWidget(self.output_vx_vy_switch_help_page_5)
        self.diagnostic_procedures_help_page_5 = QtWidgets.QWidget()
        self.diagnostic_procedures_help_page_5.setObjectName("diagnostic_procedures_help_page_5")
        self.diagnostic_procedures_help_text_5 = QtWidgets.QTextBrowser(self.diagnostic_procedures_help_page_5)
        self.diagnostic_procedures_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.diagnostic_procedures_help_text_5.setObjectName("diagnostic_procedures_help_text_5")
        self.io_help_5.addWidget(self.diagnostic_procedures_help_page_5)
        self.N_in_reduced_help_page_5 = QtWidgets.QWidget()
        self.N_in_reduced_help_page_5.setObjectName("N_in_reduced_help_page_5")
        self.N_in_reduced_help_text_5 = QtWidgets.QTextBrowser(self.N_in_reduced_help_page_5)
        self.N_in_reduced_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.N_in_reduced_help_text_5.setObjectName("N_in_reduced_help_text_5")
        self.io_help_5.addWidget(self.N_in_reduced_help_page_5)
        self.N_out_reduced_help_page_5 = QtWidgets.QWidget()
        self.N_out_reduced_help_page_5.setObjectName("N_out_reduced_help_page_5")
        self.N_out_reduced_help_text_5 = QtWidgets.QTextBrowser(self.N_out_reduced_help_page_5)
        self.N_out_reduced_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.N_out_reduced_help_text_5.setObjectName("N_out_reduced_help_text_5")
        self.io_help_5.addWidget(self.N_out_reduced_help_page_5)
        self.parameters_help_page_5 = QtWidgets.QWidget()
        self.parameters_help_page_5.setObjectName("parameters_help_page_5")
        self.parameters_help_text_5 = QtWidgets.QTextBrowser(self.parameters_help_page_5)
        self.parameters_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.parameters_help_text_5.setObjectName("parameters_help_text_5")
        self.io_help_5.addWidget(self.parameters_help_page_5)
        self.init_cond_modes_help_page_5 = QtWidgets.QWidget()
        self.init_cond_modes_help_page_5.setObjectName("init_cond_modes_help_page_5")
        self.init_cond_modes_help_text_5 = QtWidgets.QTextBrowser(self.init_cond_modes_help_page_5)
        self.init_cond_modes_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.init_cond_modes_help_text_5.setObjectName("init_cond_modes_help_text_5")
        self.io_help_5.addWidget(self.init_cond_modes_help_page_5)
        self.probes_help_page_5 = QtWidgets.QWidget()
        self.probes_help_page_5.setObjectName("probes_help_page_5")
        self.probes_help_text_5 = QtWidgets.QTextBrowser(self.probes_help_page_5)
        self.probes_help_text_5.setGeometry(QtCore.QRect(0, 0, 480, 510))
        self.probes_help_text_5.setObjectName("probes_help_text_5")
        self.io_help_5.addWidget(self.probes_help_page_5)
        self.help_label_17 = QtWidgets.QLabel(self.tab)
        self.help_label_17.setGeometry(QtCore.QRect(710, 30, 31, 16))
        self.help_label_17.setObjectName("help_label_17")
        self.io_help_dropdown_5 = QtWidgets.QComboBox(self.tab)
        self.io_help_dropdown_5.setGeometry(QtCore.QRect(760, 20, 191, 31))
        self.io_help_dropdown_5.setObjectName("io_help_dropdown_5")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.io_help_dropdown_5.addItem("")
        self.label_253 = QtWidgets.QLabel(self.tab)
        self.label_253.setGeometry(QtCore.QRect(750, 30, 16, 17))
        self.label_253.setObjectName("label_253")
        self.program_LES_switch_label_8 = QtWidgets.QLabel(self.tab)
        self.program_LES_switch_label_8.setGeometry(QtCore.QRect(70, 100, 201, 17))
        self.program_LES_switch_label_8.setObjectName("program_LES_switch_label_8")
        self.program_LES_switch_label_11 = QtWidgets.QLabel(self.tab)
        self.program_LES_switch_label_11.setGeometry(QtCore.QRect(70, 120, 161, 17))
        self.program_LES_switch_label_11.setObjectName("program_LES_switch_label_11")
        self.program_LES_switch_label_7 = QtWidgets.QLabel(self.tab)
        self.program_LES_switch_label_7.setGeometry(QtCore.QRect(70, 80, 161, 17))
        self.program_LES_switch_label_7.setObjectName("program_LES_switch_label_7")
        self.label_80 = QtWidgets.QLabel(self.tab)
        self.label_80.setGeometry(QtCore.QRect(300, 80, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_80.setFont(font)
        self.label_80.setObjectName("label_80")
        self.label_78 = QtWidgets.QLabel(self.tab)
        self.label_78.setGeometry(QtCore.QRect(300, 60, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_78.setFont(font)
        self.label_78.setObjectName("label_78")
        self.label_84 = QtWidgets.QLabel(self.tab)
        self.label_84.setGeometry(QtCore.QRect(300, 120, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_84.setFont(font)
        self.label_84.setObjectName("label_84")
        self.label_82 = QtWidgets.QLabel(self.tab)
        self.label_82.setGeometry(QtCore.QRect(300, 100, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_82.setFont(font)
        self.label_82.setObjectName("label_82")
        self.program_LES_switch_label_6 = QtWidgets.QLabel(self.tab)
        self.program_LES_switch_label_6.setGeometry(QtCore.QRect(70, 60, 161, 17))
        self.program_LES_switch_label_6.setObjectName("program_LES_switch_label_6")
        self.label_79 = QtWidgets.QLabel(self.tab)
        self.label_79.setGeometry(QtCore.QRect(290, 60, 16, 17))
        self.label_79.setObjectName("label_79")
        self.label_83 = QtWidgets.QLabel(self.tab)
        self.label_83.setGeometry(QtCore.QRect(290, 100, 16, 17))
        self.label_83.setObjectName("label_83")
        self.label_81 = QtWidgets.QLabel(self.tab)
        self.label_81.setGeometry(QtCore.QRect(290, 80, 16, 17))
        self.label_81.setObjectName("label_81")
        self.label_85 = QtWidgets.QLabel(self.tab)
        self.label_85.setGeometry(QtCore.QRect(290, 120, 16, 17))
        self.label_85.setObjectName("label_85")
        self.tabWidget = QtWidgets.QTabWidget(self.tab)
        self.tabWidget.setGeometry(QtCore.QRect(70, 160, 461, 281))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.program_sincostr_switch_25 = QtWidgets.QLabel(self.tab_2)
        self.program_sincostr_switch_25.setGeometry(QtCore.QRect(20, 70, 141, 20))
        self.program_sincostr_switch_25.setObjectName("program_sincostr_switch_25")
        self.lineEdit_20 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_20.setGeometry(QtCore.QRect(180, 70, 191, 25))
        self.lineEdit_20.setText("")
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.label_86 = QtWidgets.QLabel(self.tab_2)
        self.label_86.setGeometry(QtCore.QRect(170, 20, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_86.setFont(font)
        self.label_86.setObjectName("label_86")
        self.program_LES_switch_label_13 = QtWidgets.QLabel(self.tab_2)
        self.program_LES_switch_label_13.setGeometry(QtCore.QRect(20, 40, 131, 20))
        self.program_LES_switch_label_13.setObjectName("program_LES_switch_label_13")
        self.label_215 = QtWidgets.QLabel(self.tab_2)
        self.label_215.setGeometry(QtCore.QRect(380, 70, 16, 17))
        self.label_215.setObjectName("label_215")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.tab_2)
        self.lineEdit_5.setGeometry(QtCore.QRect(170, 40, 61, 25))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label_214 = QtWidgets.QLabel(self.tab_2)
        self.label_214.setGeometry(QtCore.QRect(160, 70, 16, 17))
        self.label_214.setObjectName("label_214")
        self.label_216 = QtWidgets.QLabel(self.tab_2)
        self.label_216.setGeometry(QtCore.QRect(170, 70, 16, 17))
        self.label_216.setObjectName("label_216")
        self.label_88 = QtWidgets.QLabel(self.tab_2)
        self.label_88.setGeometry(QtCore.QRect(160, 40, 16, 17))
        self.label_88.setObjectName("label_88")
        self.program_LES_switch_label_12 = QtWidgets.QLabel(self.tab_2)
        self.program_LES_switch_label_12.setGeometry(QtCore.QRect(20, 20, 111, 17))
        self.program_LES_switch_label_12.setObjectName("program_LES_switch_label_12")
        self.label_87 = QtWidgets.QLabel(self.tab_2)
        self.label_87.setGeometry(QtCore.QRect(160, 20, 16, 17))
        self.label_87.setObjectName("label_87")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.label_244 = QtWidgets.QLabel(self.tab_3)
        self.label_244.setGeometry(QtCore.QRect(380, 70, 16, 17))
        self.label_244.setObjectName("label_244")
        self.program_sincostr_switch_30 = QtWidgets.QLabel(self.tab_3)
        self.program_sincostr_switch_30.setGeometry(QtCore.QRect(20, 70, 141, 20))
        self.program_sincostr_switch_30.setObjectName("program_sincostr_switch_30")
        self.label_239 = QtWidgets.QLabel(self.tab_3)
        self.label_239.setGeometry(QtCore.QRect(170, 70, 16, 17))
        self.label_239.setObjectName("label_239")
        self.label_245 = QtWidgets.QLabel(self.tab_3)
        self.label_245.setGeometry(QtCore.QRect(160, 70, 16, 17))
        self.label_245.setObjectName("label_245")
        self.label_242 = QtWidgets.QLabel(self.tab_3)
        self.label_242.setGeometry(QtCore.QRect(160, 20, 16, 17))
        self.label_242.setObjectName("label_242")
        self.program_LES_switch_label_27 = QtWidgets.QLabel(self.tab_3)
        self.program_LES_switch_label_27.setGeometry(QtCore.QRect(20, 20, 111, 17))
        self.program_LES_switch_label_27.setObjectName("program_LES_switch_label_27")
        self.lineEdit_23 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_23.setGeometry(QtCore.QRect(180, 70, 191, 25))
        self.lineEdit_23.setText("")
        self.lineEdit_23.setObjectName("lineEdit_23")
        self.label_240 = QtWidgets.QLabel(self.tab_3)
        self.label_240.setGeometry(QtCore.QRect(170, 20, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_240.setFont(font)
        self.label_240.setObjectName("label_240")
        self.label_241 = QtWidgets.QLabel(self.tab_3)
        self.label_241.setGeometry(QtCore.QRect(160, 40, 16, 17))
        self.label_241.setObjectName("label_241")
        self.program_LES_switch_label_28 = QtWidgets.QLabel(self.tab_3)
        self.program_LES_switch_label_28.setGeometry(QtCore.QRect(20, 40, 131, 20))
        self.program_LES_switch_label_28.setObjectName("program_LES_switch_label_28")
        self.lineEdit_15 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_15.setGeometry(QtCore.QRect(170, 40, 61, 25))
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.label_251 = QtWidgets.QLabel(self.tab_4)
        self.label_251.setGeometry(QtCore.QRect(380, 70, 16, 17))
        self.label_251.setObjectName("label_251")
        self.label_249 = QtWidgets.QLabel(self.tab_4)
        self.label_249.setGeometry(QtCore.QRect(160, 20, 16, 17))
        self.label_249.setObjectName("label_249")
        self.label_246 = QtWidgets.QLabel(self.tab_4)
        self.label_246.setGeometry(QtCore.QRect(170, 70, 16, 17))
        self.label_246.setObjectName("label_246")
        self.program_sincostr_switch_31 = QtWidgets.QLabel(self.tab_4)
        self.program_sincostr_switch_31.setGeometry(QtCore.QRect(20, 70, 141, 20))
        self.program_sincostr_switch_31.setObjectName("program_sincostr_switch_31")
        self.program_LES_switch_label_30 = QtWidgets.QLabel(self.tab_4)
        self.program_LES_switch_label_30.setGeometry(QtCore.QRect(20, 40, 131, 20))
        self.program_LES_switch_label_30.setObjectName("program_LES_switch_label_30")
        self.label_247 = QtWidgets.QLabel(self.tab_4)
        self.label_247.setGeometry(QtCore.QRect(170, 20, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_247.setFont(font)
        self.label_247.setObjectName("label_247")
        self.label_248 = QtWidgets.QLabel(self.tab_4)
        self.label_248.setGeometry(QtCore.QRect(160, 40, 16, 17))
        self.label_248.setObjectName("label_248")
        self.lineEdit_24 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_24.setGeometry(QtCore.QRect(180, 70, 191, 25))
        self.lineEdit_24.setText("")
        self.lineEdit_24.setObjectName("lineEdit_24")
        self.label_252 = QtWidgets.QLabel(self.tab_4)
        self.label_252.setGeometry(QtCore.QRect(160, 70, 16, 17))
        self.label_252.setObjectName("label_252")
        self.lineEdit_16 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_16.setGeometry(QtCore.QRect(170, 40, 61, 25))
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.program_LES_switch_label_29 = QtWidgets.QLabel(self.tab_4)
        self.program_LES_switch_label_29.setGeometry(QtCore.QRect(20, 20, 111, 17))
        self.program_LES_switch_label_29.setObjectName("program_LES_switch_label_29")
        self.program_sincostr_switch_34 = QtWidgets.QLabel(self.tab_4)
        self.program_sincostr_switch_34.setGeometry(QtCore.QRect(20, 130, 141, 20))
        self.program_sincostr_switch_34.setObjectName("program_sincostr_switch_34")
        self.lineEdit_27 = QtWidgets.QLineEdit(self.tab_4)
        self.lineEdit_27.setGeometry(QtCore.QRect(180, 130, 191, 25))
        self.lineEdit_27.setText("")
        self.lineEdit_27.setObjectName("lineEdit_27")
        self.label_266 = QtWidgets.QLabel(self.tab_4)
        self.label_266.setGeometry(QtCore.QRect(160, 100, 16, 17))
        self.label_266.setObjectName("label_266")
        self.label_267 = QtWidgets.QLabel(self.tab_4)
        self.label_267.setGeometry(QtCore.QRect(160, 130, 16, 17))
        self.label_267.setObjectName("label_267")
        self.label_269 = QtWidgets.QLabel(self.tab_4)
        self.label_269.setGeometry(QtCore.QRect(380, 130, 16, 17))
        self.label_269.setObjectName("label_269")
        self.program_kind_label_62 = QtWidgets.QLabel(self.tab_4)
        self.program_kind_label_62.setGeometry(QtCore.QRect(20, 100, 121, 17))
        self.program_kind_label_62.setObjectName("program_kind_label_62")
        self.program_kind_4 = QtWidgets.QComboBox(self.tab_4)
        self.program_kind_4.setGeometry(QtCore.QRect(170, 94, 201, 31))
        self.program_kind_4.setObjectName("program_kind_4")
        self.program_kind_4.addItem("")
        self.program_kind_4.addItem("")
        self.program_kind_4.addItem("")
        self.label_268 = QtWidgets.QLabel(self.tab_4)
        self.label_268.setGeometry(QtCore.QRect(170, 130, 16, 17))
        self.label_268.setObjectName("label_268")
        self.tabWidget.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.program_LES_switch_label_32 = QtWidgets.QLabel(self.tab_5)
        self.program_LES_switch_label_32.setGeometry(QtCore.QRect(30, 50, 131, 20))
        self.program_LES_switch_label_32.setObjectName("program_LES_switch_label_32")
        self.label_260 = QtWidgets.QLabel(self.tab_5)
        self.label_260.setGeometry(QtCore.QRect(170, 80, 16, 17))
        self.label_260.setObjectName("label_260")
        self.program_kind_label_61 = QtWidgets.QLabel(self.tab_5)
        self.program_kind_label_61.setGeometry(QtCore.QRect(30, 150, 121, 17))
        self.program_kind_label_61.setObjectName("program_kind_label_61")
        self.lineEdit_17 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_17.setGeometry(QtCore.QRect(180, 50, 61, 25))
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.label_255 = QtWidgets.QLabel(self.tab_5)
        self.label_255.setGeometry(QtCore.QRect(170, 50, 16, 17))
        self.label_255.setObjectName("label_255")
        self.program_sincostr_switch_32 = QtWidgets.QLabel(self.tab_5)
        self.program_sincostr_switch_32.setGeometry(QtCore.QRect(30, 110, 141, 20))
        self.program_sincostr_switch_32.setObjectName("program_sincostr_switch_32")
        self.label_263 = QtWidgets.QLabel(self.tab_5)
        self.label_263.setGeometry(QtCore.QRect(170, 180, 16, 17))
        self.label_263.setObjectName("label_263")
        self.program_sincostr_switch_33 = QtWidgets.QLabel(self.tab_5)
        self.program_sincostr_switch_33.setGeometry(QtCore.QRect(30, 180, 141, 20))
        self.program_sincostr_switch_33.setObjectName("program_sincostr_switch_33")
        self.lineEdit_25 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_25.setGeometry(QtCore.QRect(190, 110, 191, 25))
        self.lineEdit_25.setText("")
        self.lineEdit_25.setObjectName("lineEdit_25")
        self.label_254 = QtWidgets.QLabel(self.tab_5)
        self.label_254.setGeometry(QtCore.QRect(170, 30, 16, 17))
        self.label_254.setObjectName("label_254")
        self.label_261 = QtWidgets.QLabel(self.tab_5)
        self.label_261.setGeometry(QtCore.QRect(180, 110, 16, 17))
        self.label_261.setObjectName("label_261")
        self.program_LES_switch_label_31 = QtWidgets.QLabel(self.tab_5)
        self.program_LES_switch_label_31.setGeometry(QtCore.QRect(30, 30, 111, 17))
        self.program_LES_switch_label_31.setObjectName("program_LES_switch_label_31")
        self.label_259 = QtWidgets.QLabel(self.tab_5)
        self.label_259.setGeometry(QtCore.QRect(390, 110, 16, 17))
        self.label_259.setObjectName("label_259")
        self.label_256 = QtWidgets.QLabel(self.tab_5)
        self.label_256.setGeometry(QtCore.QRect(180, 30, 67, 17))
        font = QtGui.QFont()
        font.setUnderline(True)
        self.label_256.setFont(font)
        self.label_256.setObjectName("label_256")
        self.program_LES_switch_label_33 = QtWidgets.QLabel(self.tab_5)
        self.program_LES_switch_label_33.setGeometry(QtCore.QRect(30, 80, 131, 20))
        self.program_LES_switch_label_33.setObjectName("program_LES_switch_label_33")
        self.program_kind_3 = QtWidgets.QComboBox(self.tab_5)
        self.program_kind_3.setGeometry(QtCore.QRect(180, 144, 201, 31))
        self.program_kind_3.setObjectName("program_kind_3")
        self.program_kind_3.addItem("")
        self.program_kind_3.addItem("")
        self.label_262 = QtWidgets.QLabel(self.tab_5)
        self.label_262.setGeometry(QtCore.QRect(170, 150, 16, 17))
        self.label_262.setObjectName("label_262")
        self.label_264 = QtWidgets.QLabel(self.tab_5)
        self.label_264.setGeometry(QtCore.QRect(390, 180, 16, 17))
        self.label_264.setObjectName("label_264")
        self.lineEdit_26 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_26.setGeometry(QtCore.QRect(190, 180, 191, 25))
        self.lineEdit_26.setText("")
        self.lineEdit_26.setObjectName("lineEdit_26")
        self.label_258 = QtWidgets.QLabel(self.tab_5)
        self.label_258.setGeometry(QtCore.QRect(170, 110, 16, 17))
        self.label_258.setObjectName("label_258")
        self.lineEdit_18 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_18.setGeometry(QtCore.QRect(180, 80, 61, 25))
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.label_265 = QtWidgets.QLabel(self.tab_5)
        self.label_265.setGeometry(QtCore.QRect(180, 180, 16, 17))
        self.label_265.setObjectName("label_265")
        self.tabWidget.addTab(self.tab_5, "")
        self.energy_transfer_tab.addTab(self.tab, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1062, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setObjectName("actionNew")
        self.actionLoad = QtWidgets.QAction(MainWindow)
        self.actionLoad.setObjectName("actionLoad")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setCheckable(False)
        self.actionSave.setObjectName("actionSave")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionLoad)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        self.energy_transfer_tab.setCurrentIndex(4)
        self.program_help.setCurrentIndex(0)
        self.field_help.setCurrentIndex(7)
        self.time_help.setCurrentIndex(3)
        self.force_help.setCurrentIndex(0)
        self.io_help.setCurrentIndex(0)
        self.Input_list_stackedWidget.setCurrentIndex(0)
        self.io_help_2.setCurrentIndex(8)
        self.io_help_5.setCurrentIndex(8)
        self.tabWidget.setCurrentIndex(3)
        self.program_help_dropdown.currentIndexChanged['int'].connect(self.program_help.setCurrentIndex)
        self.force_help_dropdown.currentIndexChanged['int'].connect(self.force_help.setCurrentIndex)
        self.time_help_dropdown.currentIndexChanged['int'].connect(self.time_help.setCurrentIndex)
        self.field_help_dropdown.currentIndexChanged['int'].connect(self.field_help.setCurrentIndex)
        self.show_force_list_pushButton.pressed.connect(self.force_list_frame.show)
        self.buttonBox_2.accepted.connect(self.force_list_frame.hide)
        self.buttonBox_2.rejected.connect(self.force_list_frame.hide)
        self.pushButton_4.pressed.connect(self.input_list_frame.show)
        self.buttonBox.accepted.connect(self.input_list_frame.hide)
        self.buttonBox.rejected.connect(self.input_list_frame.hide)
        self.program_kind.currentIndexChanged['int'].connect(self.Input_list_stackedWidget.setCurrentIndex)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.energy_transfer_tab, self.program_kind)
        MainWindow.setTabOrder(self.program_kind, self.program_basis_type)
        MainWindow.setTabOrder(self.program_basis_type, self.program_iter_or_diag)
        MainWindow.setTabOrder(self.program_iter_or_diag, self.program_alias_option)
        MainWindow.setTabOrder(self.program_alias_option, self.program_integration_scheme)
        MainWindow.setTabOrder(self.program_integration_scheme, self.program_LES_switch)
        MainWindow.setTabOrder(self.program_LES_switch, self.program_strong_reality_condition)
        MainWindow.setTabOrder(self.program_strong_reality_condition, self.program_weak_reality_condition)
        MainWindow.setTabOrder(self.program_weak_reality_condition, self.program_low_dim_switch)
        MainWindow.setTabOrder(self.program_low_dim_switch, self.program_two_dim_switch)
        MainWindow.setTabOrder(self.program_two_dim_switch, self.program_dt_option)
        MainWindow.setTabOrder(self.program_dt_option, self.program_helicity_switch)
        MainWindow.setTabOrder(self.program_helicity_switch, self.program_sincostr_switch)
        MainWindow.setTabOrder(self.program_sincostr_switch, self.program_help_dropdown)
        MainWindow.setTabOrder(self.program_help_dropdown, self.program_basis_type_help_text)
        MainWindow.setTabOrder(self.program_basis_type_help_text, self.program_kind_help_text)
        MainWindow.setTabOrder(self.program_kind_help_text, self.field_Nx)
        MainWindow.setTabOrder(self.field_Nx, self.field_Ny)
        MainWindow.setTabOrder(self.field_Ny, self.field_Nz)
        MainWindow.setTabOrder(self.field_Nz, self.field_Nz_2)
        MainWindow.setTabOrder(self.field_Nz_2, self.field_Ny_2)
        MainWindow.setTabOrder(self.field_Ny_2, self.field_Nx_3)
        MainWindow.setTabOrder(self.field_Nx_3, self.field_Nz_3)
        MainWindow.setTabOrder(self.field_Nz_3, self.lineEdit_2)
        MainWindow.setTabOrder(self.lineEdit_2, self.lineEdit_3)
        MainWindow.setTabOrder(self.lineEdit_3, self.lineEdit_4)
        MainWindow.setTabOrder(self.lineEdit_4, self.field_Nx_2)
        MainWindow.setTabOrder(self.field_Nx_2, self.spinBox)
        MainWindow.setTabOrder(self.spinBox, self.time_final)
        MainWindow.setTabOrder(self.time_final, self.time_dt_fixed)
        MainWindow.setTabOrder(self.time_dt_fixed, self.time_courant_no)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tarang GUI"))
        self.program_kind_label.setText(_translate("MainWindow", "kind"))
        self.label.setText(_translate("MainWindow", ":"))
        self.program_kind.setItemText(0, _translate("MainWindow", "FLUID_INCOMPRESS"))
        self.program_kind.setItemText(1, _translate("MainWindow", "SCALAR_INCOMPRESS"))
        self.program_kind.setItemText(2, _translate("MainWindow", "RBC"))
        self.program_kind.setItemText(3, _translate("MainWindow", "STRATIFIED"))
        self.program_kind.setItemText(4, _translate("MainWindow", "MRBC"))
        self.program_kind.setItemText(5, _translate("MainWindow", "MHD_INCOMPRESS"))
        self.program_kind.setItemText(6, _translate("MainWindow", "KEPLERIAN"))
        self.program_kind.setItemText(7, _translate("MainWindow", "MHD_SCALAR_INCOMPRESS"))
        self.program_kind.setItemText(8, _translate("MainWindow", "MHD_ASTRO_INCOMPRESS"))
        self.program_kind.setItemText(9, _translate("MainWindow", "GP"))
        self.program_basis_type.setItemText(0, _translate("MainWindow", "FFF"))
        self.program_basis_type.setItemText(1, _translate("MainWindow", "SFF"))
        self.program_basis_type.setItemText(2, _translate("MainWindow", "SSF"))
        self.program_basis_type.setItemText(3, _translate("MainWindow", "SSS"))
        self.program_basis_type_label.setText(_translate("MainWindow", "basis_type"))
        self.label_2.setText(_translate("MainWindow", ":"))
        self.label_3.setText(_translate("MainWindow", ":"))
        self.program_iter_or_diag.setItemText(0, _translate("MainWindow", "ITERATION"))
        self.program_iter_or_diag.setItemText(1, _translate("MainWindow", "DIAGNOSTICS"))
        self.program_iter_or_diag_label.setText(_translate("MainWindow", "iter_or_diag"))
        self.label_4.setText(_translate("MainWindow", ":"))
        self.program_alias_option.setItemText(0, _translate("MainWindow", "DEALIAS"))
        self.program_alias_option.setItemText(1, _translate("MainWindow", "ALIAS"))
        self.program_alias_option_label.setText(_translate("MainWindow", "alias_option"))
        self.label_5.setText(_translate("MainWindow", ":"))
        self.program_integration_scheme_label.setText(_translate("MainWindow", "integration_scheme"))
        self.program_dt_option.setItemText(0, _translate("MainWindow", "FIXED"))
        self.program_dt_option.setItemText(1, _translate("MainWindow", "CFL"))
        self.label_6.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label.setText(_translate("MainWindow", "LES_switch"))
        self.program_apply_strong_realitycond_alltime_switch_label.setText(_translate("MainWindow", "apply_strong_realitycond_alltime_switch"))
        self.label_9.setText(_translate("MainWindow", ":"))
        self.program_apply_weak_realitycond_switch_alltime_switch_label.setText(_translate("MainWindow", "apply_weak_realitycond_alltime_switch"))
        self.label_11.setText(_translate("MainWindow", ":"))
        self.program_low_diemnsional_switch_label.setText(_translate("MainWindow", "low_dimensional_switch"))
        self.label_13.setText(_translate("MainWindow", ":"))
        self.label_16.setText(_translate("MainWindow", ":"))
        self.program_two_dimension_label.setText(_translate("MainWindow", "two_dimension"))
        self.program_dt_option_label.setText(_translate("MainWindow", "dt_option"))
        self.label_19.setText(_translate("MainWindow", ":"))
        self.program_integration_scheme.setItemText(0, _translate("MainWindow", "RK2"))
        self.program_integration_scheme.setItemText(1, _translate("MainWindow", "RK4"))
        self.program_integration_scheme.setItemText(2, _translate("MainWindow", "EULER"))
        self.program_helicity_switch_label.setText(_translate("MainWindow", "helicity_switch"))
        self.label_20.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch_label.setText(_translate("MainWindow", "sincostr_switch"))
        self.label_22.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch.setText(_translate("MainWindow", "FFF"))
        self.program_kind_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Tarang is a Turbulent Fluid Simulation Software.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In FLUID_INCOMPRESS, we have three components of velocity field and some Forces in the system defined by the following equation.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/program/INCOMPRESS_FLUID.svg\" /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">SCALAR_INCOMPRESS has the basic </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RBC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">STRATIFIED</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MRBC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MHD_INCOMPRESS</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">KEPLERIAN</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MHD_SCALAR_INCOMPRESS</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MHD_ASTRO_INCOMPRESS</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">GP</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.program_basis_type_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">basis_type represents the kernel to be used in Fourier Transforms.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Among three letters, they are kernels for X, Y, and Z axis.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">F: exp(-i <span style=\" font-weight:600;\">k ·</span> <span style=\" font-weight:600;\">r</span>)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">S: sin(-i<span style=\" font-weight:600;\">k ·r</span>) or cos (-i<span style=\" font-weight:600;\">k ·r</span>)</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">F is used for periodic boundary conditions, S is used to free slip boundary conditions.</p></body></html>"))
        self.program_iter_or_diag_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">With ITERATION, the simulation is time stepped, with DIAGONOSTICS, a given field is analysed.</p></body></html>"))
        self.program_alias_option_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">alias_option sets whether to keep the fields aliased or dealias them. Aliasing happens during fousier transform. We use 2/3 Dealiasing rule.</p></body></html>"))
        self.program_integration_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Tarang has the following integrations schemes for the fields.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RK2, RK4, EULER</p></body></html>"))
        self.program_LES_switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Large Eddy Simulation</p></body></html>"))
        self.program_strong_reality_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The reality condition in fourier transforms is as follows.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/program/Conjugate_reality_condition.svg\" /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">for this condition, we do not keep the negative indices.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">But for k=0, we must ensure that this condition is satisfied for stability from random errors. This requires global communication.</p></body></html>"))
        self.program_weak_reality_condition_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">In this, only z=Nz/2 plane is set to satisfy the reality condition. This does not require global communication.</p></body></html>"))
        self.program_dt_option_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">dt_option can be FIXED or CFL.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">FIXED dt maintaines the given dt in <span style=\" font-style:italic;\">time</span> tab.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">CFL dt uses CFL condition to find dt in each step with minimum dt as given in <span style=\" font-style:italic;\">time</span> tab.</p></body></html>"))
        self.program_sincostr_switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This sets the transform kernels to be used for Vx. Other components\' kernels are set accordingly. </p></body></html>"))
        self.help_label.setText(_translate("MainWindow", "Help"))
        self.program_help_dropdown.setItemText(0, _translate("MainWindow", "kind"))
        self.program_help_dropdown.setItemText(1, _translate("MainWindow", "basis_type"))
        self.program_help_dropdown.setItemText(2, _translate("MainWindow", "iter_or_diag"))
        self.program_help_dropdown.setItemText(3, _translate("MainWindow", "alias_option"))
        self.program_help_dropdown.setItemText(4, _translate("MainWindow", "integration_scheme"))
        self.program_help_dropdown.setItemText(5, _translate("MainWindow", "LES_switch"))
        self.program_help_dropdown.setItemText(6, _translate("MainWindow", "apply_strong_realitycond_alltime_switch"))
        self.program_help_dropdown.setItemText(7, _translate("MainWindow", "apply_weak_realitycond_alltime_switch"))
        self.program_help_dropdown.setItemText(8, _translate("MainWindow", "low_dimensional_switch"))
        self.program_help_dropdown.setItemText(9, _translate("MainWindow", "two_dimensional_switch"))
        self.program_help_dropdown.setItemText(10, _translate("MainWindow", "two_dimension"))
        self.program_help_dropdown.setItemText(11, _translate("MainWindow", "dt_option"))
        self.program_help_dropdown.setItemText(12, _translate("MainWindow", "helicity_switch"))
        self.program_help_dropdown.setItemText(13, _translate("MainWindow", "sincostr_switch"))
        self.label_24.setText(_translate("MainWindow", ":"))
        self.program_LES_switch.setText(_translate("MainWindow", "false"))
        self.program_strong_reality_condition.setText(_translate("MainWindow", "false"))
        self.program_weak_reality_condition.setText(_translate("MainWindow", "false"))
        self.program_low_dim_switch.setText(_translate("MainWindow", "false"))
        self.program_two_dim_switch.setText(_translate("MainWindow", "false"))
        self.program_helicity_switch.setText(_translate("MainWindow", "false"))
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.program), _translate("MainWindow", "Program"))
        self.program_kind_label_2.setText(_translate("MainWindow", "N"))
        self.label_14.setText(_translate("MainWindow", ":"))
        self.field_Nx.setPlaceholderText(_translate("MainWindow", "Nx"))
        self.label_15.setText(_translate("MainWindow", "["))
        self.label_23.setText(_translate("MainWindow", ","))
        self.field_Ny.setPlaceholderText(_translate("MainWindow", "Ny"))
        self.label_25.setText(_translate("MainWindow", ","))
        self.field_Nz.setPlaceholderText(_translate("MainWindow", "Nz"))
        self.label_26.setText(_translate("MainWindow", "]"))
        self.label_27.setText(_translate("MainWindow", ","))
        self.label_28.setText(_translate("MainWindow", "]"))
        self.program_kind_label_3.setText(_translate("MainWindow", "kfactor"))
        self.label_29.setText(_translate("MainWindow", ":"))
        self.label_30.setText(_translate("MainWindow", ","))
        self.label_31.setText(_translate("MainWindow", ":"))
        self.label_32.setText(_translate("MainWindow", "["))
        self.label_33.setText(_translate("MainWindow", ":"))
        self.label_34.setText(_translate("MainWindow", ","))
        self.label_35.setText(_translate("MainWindow", ","))
        self.label_36.setText(_translate("MainWindow", "["))
        self.program_kind_label_4.setText(_translate("MainWindow", "L"))
        self.label_37.setText(_translate("MainWindow", "]"))
        self.label_38.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch_2.setText(_translate("MainWindow", "diss_coefficients"))
        self.label_39.setText(_translate("MainWindow", "["))
        self.label_40.setText(_translate("MainWindow", "]"))
        self.label_41.setText(_translate("MainWindow", ":"))
        self.label_42.setText(_translate("MainWindow", "["))
        self.program_sincostr_switch_3.setText(_translate("MainWindow", "hyper_diss_coefficients"))
        self.label_43.setText(_translate("MainWindow", "]"))
        self.label_44.setText(_translate("MainWindow", ":"))
        self.label_45.setText(_translate("MainWindow", "["))
        self.program_sincostr_switch_4.setText(_translate("MainWindow", "hyper_diss_exponents"))
        self.label_46.setText(_translate("MainWindow", "]"))
        self.program_LES_switch_label_2.setText(_translate("MainWindow", "waveno_switch"))
        self.label_48.setText(_translate("MainWindow", "true"))
        self.label_49.setText(_translate("MainWindow", ":"))
        self.label_50.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_3.setText(_translate("MainWindow", "anisotropy_dirn"))
        self.field_N_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">N</span> is he grid size along X, Y and Z axes respectively.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Grid size: </p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/program/grid_size.svg\" /></p></body></html>"))
        self.field_kfactor_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.field_diss_coefficients_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Comma separeted values for different fields such as</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">v </span>for Fluid</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-style:italic;\">v, k </span>for RBC</p></body></html>"))
        self.field_anisotropy_dirn_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.help_label_2.setText(_translate("MainWindow", "Help"))
        self.field_help_dropdown.setItemText(0, _translate("MainWindow", "N"))
        self.field_help_dropdown.setItemText(1, _translate("MainWindow", "kfactor"))
        self.field_help_dropdown.setItemText(2, _translate("MainWindow", "L"))
        self.field_help_dropdown.setItemText(3, _translate("MainWindow", "diss_coefficients"))
        self.field_help_dropdown.setItemText(4, _translate("MainWindow", "hyper_diss_coefficients"))
        self.field_help_dropdown.setItemText(5, _translate("MainWindow", "hyper_diss_exponents"))
        self.field_help_dropdown.setItemText(6, _translate("MainWindow", "anisotropy_dirn"))
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.field_tab), _translate("MainWindow", "Field"))
        self.field_kind_label_5.setText(_translate("MainWindow", "init"))
        self.label_51.setText(_translate("MainWindow", ":"))
        self.program_kind_label_6.setText(_translate("MainWindow", "final"))
        self.label_52.setText(_translate("MainWindow", ":"))
        self.label_53.setText(_translate("MainWindow", ":"))
        self.program_kind_label_7.setText(_translate("MainWindow", "dt_fixed"))
        self.program_kind_label_8.setText(_translate("MainWindow", "Courant_no"))
        self.label_54.setText(_translate("MainWindow", ":"))
        self.help_label_3.setText(_translate("MainWindow", "Help"))
        self.label_57.setText(_translate("MainWindow", ":"))
        self.time_help_dropdown.setItemText(0, _translate("MainWindow", "init"))
        self.time_help_dropdown.setItemText(1, _translate("MainWindow", "final"))
        self.time_help_dropdown.setItemText(2, _translate("MainWindow", "dt_fixed"))
        self.time_help_dropdown.setItemText(3, _translate("MainWindow", "Courant_no"))
        self.time_init_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Non-dimentional simulation start time.</p></body></html>"))
        self.time_final_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Non-dimentional simulation finish time.</p></body></html>"))
        self.time_dt_fixed_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Non-dimentional time steps.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When dt_option is FIXED this time is used as steps,</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">then dt_option is CFL, CFL dt is used and this is used as the minimum time step.</p></body></html>"))
        self.time_courant_no_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">CFL coefficient.</p></body></html>"))
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.time_tab), _translate("MainWindow", "time"))
        self.label_55.setText(_translate("MainWindow", "false"))
        self.label_56.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_4.setText(_translate("MainWindow", "U_switch"))
        self.program_LES_switch_label_9.setText(_translate("MainWindow", "W_switch"))
        self.label_113.setText(_translate("MainWindow", ":"))
        self.label_114.setText(_translate("MainWindow", "false"))
        self.label_115.setText(_translate("MainWindow", "false"))
        self.program_LES_switch_label_10.setText(_translate("MainWindow", "T_switch"))
        self.label_116.setText(_translate("MainWindow", ":"))
        self.label_117.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch_9.setText(_translate("MainWindow", "field_procedure"))
        self.label_118.setText(_translate("MainWindow", "["))
        self.label_119.setText(_translate("MainWindow", "]"))
        self.label_120.setText(_translate("MainWindow", "]"))
        self.label_121.setText(_translate("MainWindow", ":"))
        self.label_122.setText(_translate("MainWindow", "["))
        self.program_sincostr_switch_10.setText(_translate("MainWindow", "parameters"))
        self.program_sincostr_switch_11.setText(_translate("MainWindow", "modes"))
        self.label_123.setText(_translate("MainWindow", ":"))
        self.help_label_4.setText(_translate("MainWindow", "Help"))
        self.label_58.setText(_translate("MainWindow", ":"))
        self.force_help_dropdown.setItemText(0, _translate("MainWindow", "U_switch"))
        self.force_help_dropdown.setItemText(1, _translate("MainWindow", "T_switch"))
        self.force_help_dropdown.setItemText(2, _translate("MainWindow", "W_switch"))
        self.force_help_dropdown.setItemText(3, _translate("MainWindow", "field_procedure"))
        self.force_help_dropdown.setItemText(4, _translate("MainWindow", "parameters"))
        self.force_help_dropdown.setItemText(5, _translate("MainWindow", "modes"))
        self.U_switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Whether to apply force on U, typically the Velocity field</p></body></html>"))
        self.W_Switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Whether to apply force on W, typically the Magnetic Field</p></body></html>"))
        self.T_Switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Whether to apply force on T, typically the Temperature Field</p></body></html>"))
        self.field_field_procedure_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Which force to Apply, each force is identified by a number.</p></body></html>"))
        self.field_parameters_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Force parameters.</p></body></html>"))
        self.field_procedure_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        item = self.force_modes.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Coordinates"))
        item = self.force_modes.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Modes"))
        self.pushButton.setText(_translate("MainWindow", "+"))
        self.pushButton_2.setText(_translate("MainWindow", "-"))
        self.show_force_list_pushButton.setText(_translate("MainWindow", "..."))
        __sortingEnabled = self.force_list.isSortingEnabled()
        self.force_list.setSortingEnabled(False)
        item = self.force_list.item(0)
        item.setText(_translate("MainWindow", "Energy Force"))
        item = self.force_list.item(1)
        item.setText(_translate("MainWindow", "Helicity Force"))
        item = self.force_list.item(2)
        item.setText(_translate("MainWindow", "Temperature Force"))
        item = self.force_list.item(3)
        item.setText(_translate("MainWindow", "Magnetic Energu Force"))
        item = self.force_list.item(4)
        item.setText(_translate("MainWindow", "Magnetic Helicity Force"))
        item = self.force_list.item(5)
        item.setText(_translate("MainWindow", "Magnetic Cross Helicity Force"))
        self.force_list.setSortingEnabled(__sortingEnabled)
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.force_tab), _translate("MainWindow", "Force"))
        self.label_59.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_5.setText(_translate("MainWindow", "input_field_procedure"))
        self.lineEdit.setText(_translate("MainWindow", "1"))
        self.label_7.setText(_translate("MainWindow", "input_vx_vy_switch"))
        self.label_61.setText(_translate("MainWindow", ":"))
        self.program_strong_reality_condition_2.setText(_translate("MainWindow", "true"))
        self.program_strong_reality_condition_5.setText(_translate("MainWindow", "true"))
        self.label_107.setText(_translate("MainWindow", "output_vx_vy_switch"))
        self.label_108.setText(_translate("MainWindow", ":"))
        self.label_197.setText(_translate("MainWindow", ","))
        self.label_198.setText(_translate("MainWindow", "]"))
        self.program_kind_label_22.setText(_translate("MainWindow", "N_in_reduced"))
        self.label_199.setText(_translate("MainWindow", ","))
        self.label_200.setText(_translate("MainWindow", ":"))
        self.field_Ny_10.setPlaceholderText(_translate("MainWindow", "Ny"))
        self.field_Nz_10.setPlaceholderText(_translate("MainWindow", "Nz"))
        self.label_201.setText(_translate("MainWindow", "["))
        self.field_Nx_10.setPlaceholderText(_translate("MainWindow", "Nx"))
        self.label_202.setText(_translate("MainWindow", ","))
        self.label_203.setText(_translate("MainWindow", "]"))
        self.program_kind_label_23.setText(_translate("MainWindow", "N_out_reduced"))
        self.label_204.setText(_translate("MainWindow", ","))
        self.label_205.setText(_translate("MainWindow", ":"))
        self.field_Ny_11.setPlaceholderText(_translate("MainWindow", "Ny"))
        self.field_Nz_11.setPlaceholderText(_translate("MainWindow", "Nz"))
        self.label_206.setText(_translate("MainWindow", "["))
        self.field_Nx_11.setPlaceholderText(_translate("MainWindow", "Nx"))
        self.label_207.setText(_translate("MainWindow", "["))
        self.program_sincostr_switch_22.setText(_translate("MainWindow", "parameters"))
        self.label_208.setText(_translate("MainWindow", ":"))
        self.label_209.setText(_translate("MainWindow", "]"))
        self.program_sincostr_switch_23.setText(_translate("MainWindow", "init_cond_modes"))
        item = self.force_modes_4.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Coordinates"))
        item = self.force_modes_4.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Modes"))
        self.pushButton_10.setText(_translate("MainWindow", "+"))
        self.label_210.setText(_translate("MainWindow", ":"))
        self.pushButton_11.setText(_translate("MainWindow", "-"))
        self.pushButton_12.setText(_translate("MainWindow", "+"))
        self.pushButton_13.setText(_translate("MainWindow", "-"))
        self.program_sincostr_switch_24.setText(_translate("MainWindow", "probes"))
        item = self.force_modes_5.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Coordinates"))
        item = self.force_modes_5.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Modes"))
        self.label_211.setText(_translate("MainWindow", ":"))
        self.label_212.setText(_translate("MainWindow", ":"))
        self.help_label_13.setText(_translate("MainWindow", "Help"))
        self.input_field_procedure_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">FLUID_INCOMPRESS:</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1 : Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2 : Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3: Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4 : Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5 : Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6 : Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7 : Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        8 : Init_cond_non_helical_to_helical</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400: Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        420 : Init_cond_channel_flow</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501 : Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502 : Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RBC:</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1 : Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2 : Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3:Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4 : Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5 : Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6 : Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize only V field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7 : Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize only V field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        100 : Init_cond_Rayleigh_Taylor</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize For Rayleigh Taylor instability.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400: Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501 : Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502 : Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MHD:</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1: Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2: Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3: Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4: Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5: Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6: Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize V, W field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7: Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize V,W  field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        101: Init_cond_DYNAMO_SIX_MODE</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // For Verma et al.\'s six mode model</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        102: Init_cond_dynamo_full_velocity_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Full velocity field for a given Re, then introduce random B field in a band</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400 Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501: Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502: Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.input_vx_vy_switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When true, Compute Vz using incomptessibility contition.</p></body></html>"))
        self.output_vx_vy_switch_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When true, output only Kz=0 plane of Vz.</p></body></html>"))
        self.N_in_reduced_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Take input from lower grid size such as 256^3 and project if into higher grid size such as 512^3.</p></body></html>"))
        self.N_out_reduced_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">output a lower resoluton field such as from N=512^3 to 256^3.</p></body></html>"))
        self.parameters_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">parameters of Input procedure</p></body></html>"))
        self.init_cond_modes_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        self.probes_help_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        self.io_help_dropdown.setItemText(0, _translate("MainWindow", "input_field_procedure"))
        self.io_help_dropdown.setItemText(1, _translate("MainWindow", "input_vx_vy_switch"))
        self.io_help_dropdown.setItemText(2, _translate("MainWindow", "output_vx_vy_switch"))
        self.io_help_dropdown.setItemText(3, _translate("MainWindow", "diagnostic_procedures"))
        self.io_help_dropdown.setItemText(4, _translate("MainWindow", "N_in_reduced"))
        self.io_help_dropdown.setItemText(5, _translate("MainWindow", "N_out_reduced"))
        self.io_help_dropdown.setItemText(6, _translate("MainWindow", "parameters"))
        self.io_help_dropdown.setItemText(7, _translate("MainWindow", "init_cond_modes"))
        self.io_help_dropdown.setItemText(8, _translate("MainWindow", "probes"))
        self.pushButton_4.setText(_translate("MainWindow", "..."))
        __sortingEnabled = self.listWidget_2.isSortingEnabled()
        self.listWidget_2.setSortingEnabled(False)
        item = self.listWidget_2.item(0)
        item.setText(_translate("MainWindow", "Energy Init"))
        item = self.listWidget_2.item(1)
        item.setText(_translate("MainWindow", "Helicity Init"))
        item = self.listWidget_2.item(2)
        item.setText(_translate("MainWindow", "Temperature Init"))
        item = self.listWidget_2.item(3)
        item.setText(_translate("MainWindow", "Magnetic Energy Init"))
        item = self.listWidget_2.item(4)
        item.setText(_translate("MainWindow", "Magnetic Helicity Init"))
        item = self.listWidget_2.item(5)
        item.setText(_translate("MainWindow", "Magnetic Cross Helicity Init"))
        self.listWidget_2.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.FLUID_INCOMPRESS_Input_list.isSortingEnabled()
        self.FLUID_INCOMPRESS_Input_list.setSortingEnabled(False)
        item = self.FLUID_INCOMPRESS_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.FLUID_INCOMPRESS_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Comples Field"))
        item = self.FLUID_INCOMPRESS_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.FLUID_INCOMPRESS_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.FLUID_INCOMPRESS_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.FLUID_INCOMPRESS_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.FLUID_INCOMPRESS_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.FLUID_INCOMPRESS_Input_list.item(7)
        item.setText(_translate("MainWindow", "8: Non helical to helical"))
        item = self.FLUID_INCOMPRESS_Input_list.item(8)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.FLUID_INCOMPRESS_Input_list.item(9)
        item.setText(_translate("MainWindow", "420: Channel Flow"))
        item = self.FLUID_INCOMPRESS_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.FLUID_INCOMPRESS_Input_list.item(11)
        item.setText(_translate("MainWindow", "502: User Defined 2"))
        self.FLUID_INCOMPRESS_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.SCALAR_INCOMPRESS_Input_list.isSortingEnabled()
        self.SCALAR_INCOMPRESS_Input_list.setSortingEnabled(False)
        item = self.SCALAR_INCOMPRESS_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Comples Field"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(7)
        item.setText(_translate("MainWindow", "100: Rayleigh Taylor"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(8)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(9)
        item.setText(_translate("MainWindow", "420: Channel Flow"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.SCALAR_INCOMPRESS_Input_list.item(11)
        item.setText(_translate("MainWindow", "502: User Defined 2"))
        self.SCALAR_INCOMPRESS_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.RBC_Input_list.isSortingEnabled()
        self.RBC_Input_list.setSortingEnabled(False)
        item = self.RBC_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.RBC_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Comples Field"))
        item = self.RBC_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.RBC_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.RBC_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.RBC_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.RBC_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.RBC_Input_list.item(7)
        item.setText(_translate("MainWindow", "100: Rayleigh Taylor"))
        item = self.RBC_Input_list.item(8)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.RBC_Input_list.item(9)
        item.setText(_translate("MainWindow", "420: Channel Flow"))
        item = self.RBC_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.RBC_Input_list.item(11)
        item.setText(_translate("MainWindow", "502: User Defined 2"))
        self.RBC_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.STRATIFIED_Input_list.isSortingEnabled()
        self.STRATIFIED_Input_list.setSortingEnabled(False)
        item = self.STRATIFIED_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.STRATIFIED_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Comples Field"))
        item = self.STRATIFIED_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.STRATIFIED_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.STRATIFIED_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.STRATIFIED_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.STRATIFIED_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.STRATIFIED_Input_list.item(7)
        item.setText(_translate("MainWindow", "100: Rayleigh Taylor"))
        item = self.STRATIFIED_Input_list.item(8)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.STRATIFIED_Input_list.item(9)
        item.setText(_translate("MainWindow", "420: Channel Flow"))
        item = self.STRATIFIED_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.STRATIFIED_Input_list.item(11)
        item.setText(_translate("MainWindow", "502: User Defined 2"))
        self.STRATIFIED_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.MRBC_Input_list.isSortingEnabled()
        self.MRBC_Input_list.setSortingEnabled(False)
        item = self.MRBC_Input_list.item(0)
        item.setText(_translate("MainWindow", "4: Modes"))
        self.MRBC_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.MHD_INCOMPRESS_Input_list.isSortingEnabled()
        self.MHD_INCOMPRESS_Input_list.setSortingEnabled(False)
        item = self.MHD_INCOMPRESS_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.MHD_INCOMPRESS_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Complex Field"))
        item = self.MHD_INCOMPRESS_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.MHD_INCOMPRESS_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.MHD_INCOMPRESS_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.MHD_INCOMPRESS_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.MHD_INCOMPRESS_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.MHD_INCOMPRESS_Input_list.item(7)
        item.setText(_translate("MainWindow", "101: Dynamo Six Mode"))
        item = self.MHD_INCOMPRESS_Input_list.item(8)
        item.setText(_translate("MainWindow", "102: Dynamo Full Velocity Field"))
        item = self.MHD_INCOMPRESS_Input_list.item(9)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.MHD_INCOMPRESS_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.MHD_INCOMPRESS_Input_list.item(11)
        item.setText(_translate("MainWindow", "501: User Defined 2"))
        self.MHD_INCOMPRESS_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.KEPLERIAN_Input_list.isSortingEnabled()
        self.KEPLERIAN_Input_list.setSortingEnabled(False)
        item = self.KEPLERIAN_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.KEPLERIAN_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Complex Field"))
        item = self.KEPLERIAN_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.KEPLERIAN_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.KEPLERIAN_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.KEPLERIAN_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.KEPLERIAN_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.KEPLERIAN_Input_list.item(7)
        item.setText(_translate("MainWindow", "101: Dynamo Six Mode"))
        item = self.KEPLERIAN_Input_list.item(8)
        item.setText(_translate("MainWindow", "102: Dynamo Full Velocity Field"))
        item = self.KEPLERIAN_Input_list.item(9)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.KEPLERIAN_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.KEPLERIAN_Input_list.item(11)
        item.setText(_translate("MainWindow", "501: User Defined 2"))
        self.KEPLERIAN_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.MHD_SCALAR_INCOMPRESS_Input_list.isSortingEnabled()
        self.MHD_SCALAR_INCOMPRESS_Input_list.setSortingEnabled(False)
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(0)
        item.setText(_translate("MainWindow", "1: Complex Field"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(1)
        item.setText(_translate("MainWindow", "2: Reduced Complex Field"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(2)
        item.setText(_translate("MainWindow", "3: Real Field"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(3)
        item.setText(_translate("MainWindow", "4: Modes"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(4)
        item.setText(_translate("MainWindow", "5: Energy Helicity Spectrum"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(5)
        item.setText(_translate("MainWindow", "6: Taylor Green"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(6)
        item.setText(_translate("MainWindow", "7: ABC"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(7)
        item.setText(_translate("MainWindow", "101: Dynamo Six Mode"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(8)
        item.setText(_translate("MainWindow", "102: Dynamo Full Velocity Field"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(9)
        item.setText(_translate("MainWindow", "400: Vortex"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(10)
        item.setText(_translate("MainWindow", "501: User Defined 1"))
        item = self.MHD_SCALAR_INCOMPRESS_Input_list.item(11)
        item.setText(_translate("MainWindow", "501: User Defined 2"))
        self.MHD_SCALAR_INCOMPRESS_Input_list.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.MHD_ASTRO_INCOMPRESS_Input_list.isSortingEnabled()
        self.MHD_ASTRO_INCOMPRESS_Input_list.setSortingEnabled(False)
        item = self.MHD_ASTRO_INCOMPRESS_Input_list.item(0)
        item.setText(_translate("MainWindow", "400: Vortex"))
        self.MHD_ASTRO_INCOMPRESS_Input_list.setSortingEnabled(__sortingEnabled)
        self.radioButton.setText(_translate("MainWindow", "Pope Model"))
        self.radioButton_2.setText(_translate("MainWindow", "Pao Model"))
        self.program_sincostr_switch_26.setText(_translate("MainWindow", "diagnostic_procedures"))
        self.label_217.setText(_translate("MainWindow", ":"))
        self.label_218.setText(_translate("MainWindow", "]"))
        self.label_219.setText(_translate("MainWindow", "["))
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.io_tab), _translate("MainWindow", "io"))
        self.io_help_dropdown_2.setItemText(0, _translate("MainWindow", "input_field_procedure"))
        self.io_help_dropdown_2.setItemText(1, _translate("MainWindow", "input_vx_vy_switch"))
        self.io_help_dropdown_2.setItemText(2, _translate("MainWindow", "output_vx_vy_switch"))
        self.io_help_dropdown_2.setItemText(3, _translate("MainWindow", "diagnostic_procedures"))
        self.io_help_dropdown_2.setItemText(4, _translate("MainWindow", "N_in_reduced"))
        self.io_help_dropdown_2.setItemText(5, _translate("MainWindow", "N_out_reduced"))
        self.io_help_dropdown_2.setItemText(6, _translate("MainWindow", "parameters"))
        self.io_help_dropdown_2.setItemText(7, _translate("MainWindow", "init_cond_modes"))
        self.io_help_dropdown_2.setItemText(8, _translate("MainWindow", "probes"))
        self.label_213.setText(_translate("MainWindow", ":"))
        self.help_label_14.setText(_translate("MainWindow", "Help"))
        self.input_field_procedure_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">FLUID_INCOMPRESS:</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1 : Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2 : Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3: Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4 : Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5 : Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6 : Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7 : Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        8 : Init_cond_non_helical_to_helical</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400: Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        420 : Init_cond_channel_flow</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501 : Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502 : Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RBC:</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1 : Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2 : Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3:Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4 : Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5 : Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6 : Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize only V field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7 : Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize only V field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        100 : Init_cond_Rayleigh_Taylor</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize For Rayleigh Taylor instability.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400: Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501 : Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502 : Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MHD:</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1: Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2: Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3: Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4: Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5: Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6: Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize V, W field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7: Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize V,W  field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        101: Init_cond_DYNAMO_SIX_MODE</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // For Verma et al.\'s six mode model</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        102: Init_cond_dynamo_full_velocity_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Full velocity field for a given Re, then introduce random B field in a band</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400 Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501: Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502: Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.input_vx_vy_switch_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When true, Compute Vz using incomptessibility contition.</p></body></html>"))
        self.output_vx_vy_switch_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When true, output only Kz=0 plane of Vz.</p></body></html>"))
        self.N_in_reduced_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Take input from lower grid size such as 256^3 and project if into higher grid size such as 512^3.</p></body></html>"))
        self.N_out_reduced_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">output a lower resoluton field such as from N=512^3 to 256^3.</p></body></html>"))
        self.parameters_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">parameters of Input procedure</p></body></html>"))
        self.init_cond_modes_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        self.probes_help_text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        self.io_time_flux_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.label_67.setText(_translate("MainWindow", ":"))
        self.io_time_shell_to_shell_save_last_2.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_flux_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_field_k_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.label_74.setText(_translate("MainWindow", ":"))
        self.io_time_real_field_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_pressure_spectrum_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_ring_to_ring_save_last_2.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_pressure_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_global_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.label_47.setText(_translate("MainWindow", ":"))
        self.label_21.setText(_translate("MainWindow", ":"))
        self.program_kind_label_5.setText(_translate("MainWindow", "global_save"))
        self.io_time_ring_spectrum_save_first_2.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_ring_spectrum_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.program_kind_label_17.setText(_translate("MainWindow", "shell_to_shell_save"))
        self.io_time_ring_to_ring_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.program_kind_label_15.setText(_translate("MainWindow", "spectrum_save"))
        self.program_kind_label_19.setText(_translate("MainWindow", "cylindrical_ring_spectrum"))
        self.program_kind_label_27.setText(_translate("MainWindow", "Tk_cyl_ring_ring_spectrum"))
        self.io_time_shell_to_shell_save_interval_2.setPlaceholderText(_translate("MainWindow", "interval"))
        self.program_kind_label_11.setText(_translate("MainWindow", "field_reduced_save"))
        self.io_time_flux_save_interval_2.setPlaceholderText(_translate("MainWindow", "interval"))
        self.label_60.setText(_translate("MainWindow", ":"))
        self.io_time_pressure_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.label_75.setText(_translate("MainWindow", ":"))
        self.label_76.setText(_translate("MainWindow", ":"))
        self.program_kind_label_21.setText(_translate("MainWindow", "ring_to_ring_save"))
        self.io_time_real_field_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.program_kind_label_18.setText(_translate("MainWindow", "flux_save"))
        self.io_time_spectrum_save_first_2.setPlaceholderText(_translate("MainWindow", "first"))
        self.label_18.setText(_translate("MainWindow", ":"))
        self.label_63.setText(_translate("MainWindow", ":"))
        self.label_71.setText(_translate("MainWindow", ":"))
        self.io_time_shell_to_shell_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_shell_to_shell_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_spectrum_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_flux_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_pressure_spectrum_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.program_kind_label_14.setText(_translate("MainWindow", "field_r_save"))
        self.program_kind_label_10.setText(_translate("MainWindow", "field_frequent_save"))
        self.label_62.setText(_translate("MainWindow", ":"))
        self.program_kind_label_9.setText(_translate("MainWindow", "complex_field_save"))
        self.io_time_complex_field_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_spectrum_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_field_r_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_field_reduced_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_complex_field_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.program_kind_label_30.setText(_translate("MainWindow", "cout_save"))
        self.program_kind_label_20.setText(_translate("MainWindow", "ring_spectrum_save"))
        self.io_time_field_frequent_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_ring_to_ring_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.program_kind_label_13.setText(_translate("MainWindow", "field_k_save"))
        self.io_time_ring_to_ring_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_field_frequent_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_complex_field_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_field_r_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.label_68.setText(_translate("MainWindow", ":"))
        self.io_time_field_r_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.label_66.setText(_translate("MainWindow", ":"))
        self.io_time_field_k_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_spectrum_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.label_72.setText(_translate("MainWindow", ":"))
        self.program_kind_label_26.setText(_translate("MainWindow", "cylindrical_ring_to_ring"))
        self.io_time_global_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_field_reduced_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_pressure_spectrum_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.label_65.setText(_translate("MainWindow", ":"))
        self.program_kind_label_16.setText(_translate("MainWindow", "ring_spectrum_save"))
        self.io_time_ring_to_ring_save_first_2.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_flux_save_last_2.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_field_k_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_pressure_save_last.setPlaceholderText(_translate("MainWindow", "last"))
        self.label_70.setText(_translate("MainWindow", ":"))
        self.io_time_pressure_spectrum_save_last_2.setPlaceholderText(_translate("MainWindow", "last"))
        self.io_time_flux_save_first_2.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_ring_to_ring_save_interval_2.setPlaceholderText(_translate("MainWindow", "interval"))
        self.label_64.setText(_translate("MainWindow", ":"))
        self.label_17.setText(_translate("MainWindow", ":"))
        self.io_time_global_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_ring_spectrum_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_field_frequent_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_shell_to_shell_save_first_2.setPlaceholderText(_translate("MainWindow", "first"))
        self.io_time_pressure_save_interval_2.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_spectrum_save_last_2.setPlaceholderText(_translate("MainWindow", "last"))
        self.program_kind_label_12.setText(_translate("MainWindow", "real_field_save"))
        self.io_time_field_reduced_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_shell_to_shell_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.program_kind_label_28.setText(_translate("MainWindow", "Tk_ring_spectrum_save"))
        self.program_kind_label_29.setText(_translate("MainWindow", "Tk_shell_spectrum_save"))
        self.io_time_pressure_spectrum_save_interval_2.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_real_field_save_interval.setPlaceholderText(_translate("MainWindow", "interval"))
        self.io_time_ring_spectrum_save_first.setPlaceholderText(_translate("MainWindow", "first"))
        self.label_69.setText(_translate("MainWindow", ":"))
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.iotime), _translate("MainWindow", "io time"))
        self.input_field_procedure_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">FLUID_INCOMPRESS:</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1 : Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2 : Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3: Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4 : Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5 : Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6 : Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7 : Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        8 : Init_cond_non_helical_to_helical</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400: Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        420 : Init_cond_channel_flow</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501 : Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502 : Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RBC:</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1 : Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2 : Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3:Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4 : Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5 : Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6 : Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize only V field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7 : Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize only V field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        100 : Init_cond_Rayleigh_Taylor</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize For Rayleigh Taylor instability.</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400: Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501 : Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502 : Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">MHD:</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        1: Init_cond_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        2: Init_cond_reduced_complex_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // read from field_in_file with Nreduced D</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        3: Init_cond_real_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        4: Init_cond_modes</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Modes - ki, Vx, (Vy:3D),Theta</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        5: Init_cond_energy_helicity_spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // given energy and hel spectrum</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        6: Init_cond_Taylor_Green</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize V, W field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        7: Init_cond_ABC</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // initialize V,W  field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        101: Init_cond_DYNAMO_SIX_MODE</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // For Verma et al.\'s six mode model</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        102: Init_cond_dynamo_full_velocity_field</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        // Full velocity field for a given Re, then introduce random B field in a band</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        400 Init_cond_vortex</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">            </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        501: Init_cond_user_defined1</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">        502: Init_cond_user_defined2</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.input_vx_vy_switch_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When true, Compute Vz using incomptessibility contition.</p></body></html>"))
        self.output_vx_vy_switch_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">When true, output only Kz=0 plane of Vz.</p></body></html>"))
        self.N_in_reduced_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Take input from lower grid size such as 256^3 and project if into higher grid size such as 512^3.</p></body></html>"))
        self.N_out_reduced_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">output a lower resoluton field such as from N=512^3 to 256^3.</p></body></html>"))
        self.parameters_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">parameters of Input procedure</p></body></html>"))
        self.init_cond_modes_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        self.probes_help_text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First column is mode coordinates in format [kx, ky, kz],</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Second column is mode amplitudes in format [ (Vx), (Vy) ], e.g.  [ (0.10,0.10), (0.12,0.10) ]</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The last amplitude is calculated automatically in accordance with incompressibility condition.</p></body></html>"))
        self.help_label_17.setText(_translate("MainWindow", "Help"))
        self.io_help_dropdown_5.setItemText(0, _translate("MainWindow", "input_field_procedure"))
        self.io_help_dropdown_5.setItemText(1, _translate("MainWindow", "input_vx_vy_switch"))
        self.io_help_dropdown_5.setItemText(2, _translate("MainWindow", "output_vx_vy_switch"))
        self.io_help_dropdown_5.setItemText(3, _translate("MainWindow", "diagnostic_procedures"))
        self.io_help_dropdown_5.setItemText(4, _translate("MainWindow", "N_in_reduced"))
        self.io_help_dropdown_5.setItemText(5, _translate("MainWindow", "N_out_reduced"))
        self.io_help_dropdown_5.setItemText(6, _translate("MainWindow", "parameters"))
        self.io_help_dropdown_5.setItemText(7, _translate("MainWindow", "init_cond_modes"))
        self.io_help_dropdown_5.setItemText(8, _translate("MainWindow", "probes"))
        self.label_253.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_8.setText(_translate("MainWindow", "helicity_shell_to_shell_switch"))
        self.program_LES_switch_label_11.setText(_translate("MainWindow", "Elsasser"))
        self.program_LES_switch_label_7.setText(_translate("MainWindow", "helicity_flux_switch"))
        self.label_80.setText(_translate("MainWindow", "true"))
        self.label_78.setText(_translate("MainWindow", "true"))
        self.label_84.setText(_translate("MainWindow", "true"))
        self.label_82.setText(_translate("MainWindow", "true"))
        self.program_LES_switch_label_6.setText(_translate("MainWindow", "turnon"))
        self.label_79.setText(_translate("MainWindow", ":"))
        self.label_83.setText(_translate("MainWindow", ":"))
        self.label_81.setText(_translate("MainWindow", ":"))
        self.label_85.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch_25.setText(_translate("MainWindow", "radii"))
        self.label_86.setText(_translate("MainWindow", "true"))
        self.program_LES_switch_label_13.setText(_translate("MainWindow", "no_spheres"))
        self.label_215.setText(_translate("MainWindow", "]"))
        self.label_214.setText(_translate("MainWindow", ":"))
        self.label_216.setText(_translate("MainWindow", "["))
        self.label_88.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_12.setText(_translate("MainWindow", "turnon"))
        self.label_87.setText(_translate("MainWindow", ":"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "flux"))
        self.label_244.setText(_translate("MainWindow", "]"))
        self.program_sincostr_switch_30.setText(_translate("MainWindow", "radii"))
        self.label_239.setText(_translate("MainWindow", "["))
        self.label_245.setText(_translate("MainWindow", ":"))
        self.label_242.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_27.setText(_translate("MainWindow", "turnon"))
        self.label_240.setText(_translate("MainWindow", "true"))
        self.label_241.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_28.setText(_translate("MainWindow", "no_spheres"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "shell_to_shell"))
        self.label_251.setText(_translate("MainWindow", "]"))
        self.label_249.setText(_translate("MainWindow", ":"))
        self.label_246.setText(_translate("MainWindow", "["))
        self.program_sincostr_switch_31.setText(_translate("MainWindow", "radii"))
        self.program_LES_switch_label_30.setText(_translate("MainWindow", "no_spheres"))
        self.label_247.setText(_translate("MainWindow", "true"))
        self.label_248.setText(_translate("MainWindow", ":"))
        self.label_252.setText(_translate("MainWindow", ":"))
        self.program_LES_switch_label_29.setText(_translate("MainWindow", "turnon"))
        self.program_sincostr_switch_34.setText(_translate("MainWindow", "sector_angles"))
        self.label_266.setText(_translate("MainWindow", ":"))
        self.label_267.setText(_translate("MainWindow", ":"))
        self.label_269.setText(_translate("MainWindow", "]"))
        self.program_kind_label_62.setText(_translate("MainWindow", "sector_option"))
        self.program_kind_4.setItemText(0, _translate("MainWindow", "EQUASPACED"))
        self.program_kind_4.setItemText(1, _translate("MainWindow", "EQUAL_NO_MODES"))
        self.program_kind_4.setItemText(2, _translate("MainWindow", "USER_DEFINED"))
        self.label_268.setText(_translate("MainWindow", "["))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_4), _translate("MainWindow", "ring_to_ring"))
        self.program_LES_switch_label_32.setText(_translate("MainWindow", "no_spheres"))
        self.label_260.setText(_translate("MainWindow", ":"))
        self.program_kind_label_61.setText(_translate("MainWindow", "kpll_option"))
        self.label_255.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch_32.setText(_translate("MainWindow", "radii"))
        self.label_263.setText(_translate("MainWindow", ":"))
        self.program_sincostr_switch_33.setText(_translate("MainWindow", "kpll_array"))
        self.label_254.setText(_translate("MainWindow", ":"))
        self.label_261.setText(_translate("MainWindow", "["))
        self.program_LES_switch_label_31.setText(_translate("MainWindow", "turnon"))
        self.label_259.setText(_translate("MainWindow", "]"))
        self.label_256.setText(_translate("MainWindow", "true"))
        self.program_LES_switch_label_33.setText(_translate("MainWindow", "no_slabs"))
        self.program_kind_3.setItemText(0, _translate("MainWindow", "EQUASPACED"))
        self.program_kind_3.setItemText(1, _translate("MainWindow", "USER_DEFINED"))
        self.label_262.setText(_translate("MainWindow", ":"))
        self.label_264.setText(_translate("MainWindow", "]"))
        self.label_258.setText(_translate("MainWindow", ":"))
        self.label_265.setText(_translate("MainWindow", "["))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "cylindrical_ring_to_ring"))
        self.energy_transfer_tab.setTabText(self.energy_transfer_tab.indexOf(self.tab), _translate("MainWindow", "energy_transfer"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionLoad.setText(_translate("MainWindow", "Load"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))

import resources_rc
